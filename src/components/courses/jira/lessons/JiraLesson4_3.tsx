import type { LessonContent } from '../../../../types/LessonTypes';

const JiraLesson4_3Content: LessonContent = {
  title: 'ការវិភាគរបាយការណ៍ (Reports)',
  objectives: [
    'យល់ពីសារៈសំខាន់នៃរបាយការណ៍ក្នុង Jira',
    'ស្គាល់ពីប្រភេទរបាយការណ៍សំខាន់ៗ (Burndown, Velocity, Cumulative Flow)',
    'រៀនពីរបៀបបង្កើត និងបកស្រាយរបាយការណ៍',
    'អនុវត្តន៍ការប្រើប្រាស់របាយការណ៍ដើម្បីតាមដានដំណើរការគម្រោង',
    'យល់ពីរបៀបដែលរបាយការណ៍ជួយដល់ការសម្រេចចិត្ត'
  ],
  content: `
# ការវិភាគរបាយការណ៍ (Reports)

---

**Jira Reports** ផ្តល់នូវទិដ្ឋភាពស៊ីជម្រៅអំពីវឌ្ឍនភាពរបស់ក្រុម និងដំណើរការគម្រោងរបស់អ្នក។ មិនដូច Dashboards ដែលផ្តល់ព័ត៌មានទូទៅទេ Reports ផ្តល់នូវការវិភាគលម្អិត និងជួយអ្នកគ្រប់គ្រងគម្រោងធ្វើការសម្រេចចិត្តដែលមានមូលដ្ឋានលើទិន្នន័យ (Data-driven decisions)។

---

## 1. ប្រភេទរបាយការណ៍សំខាន់ៗ

- **Burndown Chart:** ត្រូវបានប្រើសម្រាប់គម្រោង **Scrum**។ វាបង្ហាញពីបរិមាណការងារដែលនៅសល់ធៀបនឹងពេលវេលា។ ប្រសិនបើបន្ទាត់ក្រាហ្វធ្លាក់ចុះជាលំដាប់ នោះមានន័យថាក្រុមរបស់អ្នកកំពុងធ្វើការបានល្អ។
- **Velocity Chart:** វាស់វែងពីចំនួនការងារ (ជាធម្មតាគិតជា Story Points) ដែលក្រុមបានបញ្ចប់ក្នុង Sprints នីមួយៗ។ របាយការណ៍នេះជួយទស្សន៍ទាយថាតើក្រុមអាចបញ្ចប់ការងារបានប៉ុន្មាននៅក្នុង Sprint បន្ទាប់។
- **Cumulative Flow Diagram (CFD):** ត្រូវបានប្រើសម្រាប់គម្រោង **Kanban**។ វាបង្ហាញពីចំនួន Issues នៅក្នុងស្ថានភាពនីមួយៗតាមពេលវេលា។ វាមានប្រយោជន៍សម្រាប់កំណត់កន្លែងដែលការងារមានការកកស្ទះនៅក្នុងលំហូរការងារ។
- **Sprint Report:** ផ្តល់នូវទិដ្ឋភាពរួមនៃ Sprint ដែលបានបញ្ចប់ រួមទាំង Issues ដែលបានបញ្ចប់, Issues ដែលមិនទាន់បានបញ្ចប់ និង Issues ដែលត្រូវបានបន្ថែមក្នុងអំឡុងពេល Sprint ។

---

## 2. ការបកស្រាយរបាយការណ៍

- **Burndown Chart:** បន្ទាត់ **"Actual Burndown"** គួរតែនៅជិតឬនៅក្រោមបន្ទាត់ **"Guideline"**។ បើវាឡើងខ្ពស់ នោះមានន័យថាការងារច្រើនត្រូវបានបន្ថែម ឬការងារយឺត។
- **Velocity Chart:** ប្រសិនបើបន្ទាត់ Velocity ស្ថិតនៅកម្រិតថេរ មានន័យថាក្រុមរបស់អ្នកមានដំណើរការដែលអាចទស្សន៍ទាយបាន។ ប្រសិនបើវាប្រែប្រួលខ្លាំង នោះក្រុមប្រហែលជាមានបញ្ហា។
- **Cumulative Flow Diagram:** ប្រសិនបើទទឹងរវាងបន្ទាត់កើនឡើង នោះមានន័យថាការងារកំពុងកកស្ទះ។

---

## 3. ការប្រើប្រាស់របាយការណ៍សម្រាប់ការសម្រេចចិត្ត

- **Burndown Chart:** ជួយអ្នកកំណត់ថាតើក្រុមអាចបញ្ចប់ Sprint បានទាន់ពេលវេលាឬអត់។
- **Velocity Chart:** ជួយ Product Owner ក្នុងការរៀបចំផែនការ Sprints បន្ទាប់ឱ្យមានប្រសិទ្ធភាព ដោយផ្អែកលើសមត្ថភាពរបស់ក្រុម។
- **Cumulative Flow Diagram:** ជួយ Scrum Master ឬ Kanban Master កំណត់កន្លែងដែលត្រូវកែលម្អលំហូរការងារ។
- **Sprint Report:** ផ្តល់ព័ត៌មានសម្រាប់ Sprint Retrospective ដើម្បីពិភាក្សាអំពីអ្វីដែលត្រូវកែលម្អ។

របាយការណ៍នៅក្នុង Jira មិនមែនគ្រាន់តែជាលេខនោះទេ តែវាជាឧបករណ៍ដ៏មានឥទ្ធិពលសម្រាប់ការកែលម្អជាប្រចាំ (Continuous Improvement) ។
`,
  examples: [
    `### ឧទាហរណ៍: ការបកស្រាយ Velocity Chart

**ស្ថានភាព:** ក្រុមការងារបានបញ្ចប់ Sprints 4 ដងហើយ។ Velocity Chart បង្ហាញពី Story Points ដូចខាងក្រោម៖
- Sprint 1: 15 Points
- Sprint 2: 20 Points
- Sprint 3: 18 Points
- Sprint 4: 21 Points

**ការវិភាគ:**
- Velocity ជាមធ្យមរបស់ក្រុមគឺប្រហែល 18.5 Points ។
- នៅពេលដែលក្រុមរៀបចំផែនការ Sprint ទី 5 ពួកគេគួរតែមិនយក Issues ដែលមាន Story Points លើសពី 18-20 នោះទេ។ នេះជួយធានាថាពួកគេអាចបញ្ចប់ការងារបានទាន់ពេលវេលាដោយមិនមានការលើសចំណុះ។
`,
  ],
  quiz: [
    {
      question: 'តើ Burndown Chart ត្រូវបានប្រើសម្រាប់ Project ប្រភេទណា?',
      options: ['Kanban', 'Scrum', 'Support', 'Marketing'],
      correct: 1,
      explanation: 'Burndown Chart ត្រូវបានប្រើសម្រាប់គម្រោង Scrum ដើម្បីតាមដានវឌ្ឍនភាព Sprint ។'
    },
    {
      question: 'តើ Velocity Chart វាស់វែងអ្វី?',
      options: ['ចំនួន Bugs', 'ចំនួន Story Points ដែលបានបញ្ចប់ក្នុង Sprints', 'ចំនួនអ្នកប្រើប្រាស់', 'ចំនួន Projects'],
      correct: 1,
      explanation: 'Velocity Chart វាស់វែងពីចំនួន Story Points ដែលក្រុមបានបញ្ចប់ក្នុង Sprints នីមួយៗ។'
    },
    {
      question: 'តើ Cumulative Flow Diagram (CFD) មានប្រយោជន៍សម្រាប់អ្វី?',
      options: ['ដើម្បីតាមដានប្រាក់ចំណូល', 'ដើម្បីកំណត់កន្លែងដែលការងារកកស្ទះ', 'ដើម្បីបង្កើត Dashboard', 'ដើម្បីបង្ហាញពី Bugs ដែលត្រូវបានជួសជុល'],
      correct: 1,
      explanation: 'CFD ជួយក្រុមមើលឃើញកន្លែងដែលការងារមានការកកស្ទះនៅក្នុងលំហូរការងារ។'
    },
    {
      question: 'តើ Sprint Report ផ្តល់ព័ត៌មានអំពីអ្វីខ្លះ?',
      options: ['ការងារដែលបានបញ្ចប់ និងមិនទាន់បានបញ្ចប់នៅក្នុង Sprint', 'តម្លៃរបស់ Project', 'ព័ត៌មានផ្ទាល់ខ្លួនរបស់អ្នកប្រើប្រាស់', 'បញ្ជី Bug ទាំងអស់'],
      correct: 0,
      explanation: 'Sprint Report ផ្តល់ព័ត៌មានលម្អិតអំពីវឌ្ឍនភាពនៃ Sprint រួមទាំង Issues ដែលបានបញ្ចប់ និងមិនបានបញ្ចប់។'
    },
    {
      question: 'តើការវិភាគរបាយការណ៍ជួយអ្វីខ្លះដល់អ្នកគ្រប់គ្រងគម្រោង?',
      options: ['ធ្វើឱ្យពួកគេមើលទៅមានជំនាញ', 'ជួយពួកគេក្នុងការសម្រេចចិត្តដែលមានមូលដ្ឋានលើទិន្នន័យ', 'ធ្វើឱ្យការងារយឺត', 'ជួយពួកគេសរសេរកូដ'],
      correct: 1,
      explanation: 'របាយការណ៍ផ្តល់នូវទិន្នន័យសំខាន់ៗដែលជួយអ្នកគ្រប់គ្រងធ្វើការសម្រេចចិត្តប្រកបដោយប្រសិទ្ធភាព។'
    }
  ],
  lab: {
    task: `
**លំហាត់អនុវត្តន៍៖**

1. ចូលទៅកាន់ Scrum Project របស់អ្នក។
2. ចូលទៅកាន់ផ្នែក **Reports**។
3. ពិនិត្យមើល **Burndown Chart** សម្រាប់ Sprint បច្ចុប្បន្នរបស់អ្នក។
4. បើក **Sprint Report** សម្រាប់ Sprint ដែលបានបញ្ចប់។
5. ពិពណ៌នាដោយសង្ខេបពីអ្វីដែលរបាយការណ៍ទាំងពីរនេះបង្ហាញ ហើយតើវានឹងមានប្រយោជន៍ដល់អ្នកនៅពេលណា។
    `,
    solution: `
**ដំណោះស្រាយ:**

1. ចូលទៅកាន់ Jira ហើយជ្រើសរើស Scrum Project របស់អ្នក។
2. នៅលើ Sidebar ចុច "Reports" ។
3. Burndown Chart បង្ហាញពីបន្ទាត់ពីរ៖ បន្ទាត់ពណ៌ប្រផេះ (Guideline) និងបន្ទាត់ពណ៌ខៀវ (Actual Burndown)។ វាបង្ហាញថាការងារដែលនៅសល់ក្នុង Sprint នេះមានប៉ុន្មាន។ វាមានប្រយោជន៍សម្រាប់ការតាមដានវឌ្ឍនភាពប្រចាំថ្ងៃ។
4. Sprint Report នឹងបង្ហាញបញ្ជីនៃ Issues ទាំងអស់ដែលបានបញ្ចប់ និង Issues ដែលមិនទាន់បានបញ្ចប់ក្នុង Sprint ដែលបានជ្រើសរើស។ វានឹងបង្ហាញផងដែរថា Issues ណាដែលត្រូវបានបន្ថែមទៅ Sprint បន្ទាប់ពីវាបានចាប់ផ្តើម។ នេះមានប្រយោជន៍សម្រាប់ការប្រជុំ Sprint Retrospective ដើម្បីពិភាក្សាពីដំណើរការការងាររបស់ក្រុម។
    `
  }
};

export default JiraLesson4_3Content;