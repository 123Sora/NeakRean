import type { Lesson } from '../../../../types/LessonTypes';

const MISLesson4_2Content: Lesson = {
  id: 'mis-lesson-4-2',
  title: 'ដំណាក់កាលនៃ SDLC',
  objectives: [
    'យល់ដឹងអំពីដំណាក់កាលនីមួយៗនៃ SDLC',
    'ស្វែងយល់ពីសកម្មភាពសំខាន់ៗនៅក្នុងដំណាក់កាលនីមួយៗ',
    'ស្គាល់ឧបករណ៍ និងបច្ចេកទេសដែលប្រើក្នុងដំណាក់កាល SDLC',
    'អនុវត្តដំណាក់កាល SDLC ក្នុងករណីសិក្សាអាជីវកម្ម',
    'ប្រៀបធៀបដំណាក់កាលនីមួយៗទៅនឹងតួនាទី និងការទទួលខុសត្រូវ',
  ],
  content: `
# ដំណាក់កាលនៃ SDLC 🌐📋

---

**ដំណាក់កាលនៃ វដ្តជីវិតនៃការអភិវឌ្ឍប្រព័ន្ធ (SDLC)** គឺជាជំហានជាបន្តបន្ទាប់ដែលប្រើសម្រាប់អភិវឌ្ឍប្រព័ន្ធព័ត៌មាន។ ដំណាក់កាលទាំងនេះផ្តល់នូវរចនាសម្ព័ន្ធដែលជួយឱ្យគម្រោងប្រព្រឹត្តទៅដោយជោគជ័យ និងបំពេញតម្រូវការអ្នកប្រើប្រាស់។

---

## 1. ដំណាក់កាលនៃ SDLC

SDLC មានដំណាក់កាលសំខាន់ៗដូចខាងក្រោម៖
1. **ការវិភាគតម្រូវការ (Requirement Analysis):** ប្រមូល និងវិភាគតម្រូវការពីអ្នកប្រើប្រាស់ និងអ្នកពាក់ព័ន្ធ។
2. **ការរចនាប្រព័ន្ធ (System Design):** បង្កើតគំនូសតាង និងផែនការសម្រាប់ប្រព័ន្ធ។
3. **ការអភិវឌ្ឍ (Development):** សរសេរកូដ និងអភិវឌ្ឍប្រព័ន្ធ។
4. **ការសាកល្បង (Testing):** ធ្វើតេស្តប្រព័ន្ធ ដើម្បីស្វែងរកកំហុស។
5. **ការដាក់ឱ្យប្រើប្រាស់ (Deployment):** ដាក់ឱ្យប្រើប្រាស់ប្រព័ន្ធនៅក្នុងបរិស្ថានផលិតកម្ម។
6. **ការថែទាំ (Maintenance):** ធ្វើបច្ចុប្បន្នភាព និងកែលម្អប្រព័ន្ធបន្ទាប់ពីការដាក់ឱ្យប្រើប្រាស់។

---

## 2. សកម្មភាពសំខាន់ៗនៅក្នុងដំណាក់កាលនីមួយៗ

1. **ការវិភាគតម្រូវការ:**
   - សម្ភាសន៍អ្នកពាក់ព័ន្ធ។
   - បង្កើតឯកសារតម្រូវការ (Requirements Specification)។
   - កំណត់អត្តសញ្ញាណគោលបំណងអាជីវកម្ម។

2. **ការរចនាប្រព័ន្ធ:**
   - បង្កើតគំនូសតាង UML (ឧទាហរណ៍៖ Use Case Diagram, Class Diagram)។
   - កំណត់ស្ថាបត្យកម្មប្រព័ន្ធ។
   - ជ្រើសរើសបច្ចេកវិទ្យា និងឧបករណ៍។

3. **ការអភិវឌ្ឍ:**
   - សរសេរកូដដោយប្រើភាសាសរសេរកម្មវិធី។
   - ធ្វើសមាហរណកម្មប្រព័ន្ធជាមួយ API ឬមូលដ្ឋានទិន្នន័យ។
   - បង្កើតចំណុចប្រទាក់អ្នកប្រើប្រាស់ (UI)។

4. **ការសាកល្បង:**
   - ធ្វើតេស្ត Unit, Integration, និង System Testing។
   - កំណត់អត្តសញ្ញាណ និងជួសជុលកំហុស។
   - ធ្វើ User Acceptance Testing (UAT)។

5. **ការដាក់ឱ្យប្រើប្រាស់:**
   - ដាក់ឱ្យប្រើប្រាស់ប្រព័ន្ធនៅក្នុងបរិស្ថានផលិតកម្ម។
   - បណ្តុះបណ្តាលអ្នកប្រើប្រាស់។
   - ផ្ទេរទិន្នន័យពីប្រព័ន្ធចាស់។

6. **ការថែទាំ:**
   - ធ្វើបច្ចុប្បន្នភាពប្រព័ន្ធ។
   - ដោះស្រាយបញ្ហាដែលកើតឡើង។
   - បន្ថែមមុខងារថ្មី។

---

## 3. ឧបករណ៍ និងបច្ចេកទេសនៅក្នុង SDLC

ឧបករណ៍ និងបច្ចេកទេសដែលប្រើរួមមាន៖
- **ការវិភាគតម្រូវការ:** Microsoft Visio, Lucidchart សម្រាប់គូសផែនទី។
- **ការរចនា:** UML, ERD (Entity-Relationship Diagram)។
- **ការអភិវឌ្ឍ:** IDEs ដូចជា Visual Studio Code, Eclipse។
- **ការសាកល្បង:** Selenium, JUnit, Postman។
- **ការគ្រប់គ្រងគម្រោង:** Jira, Trello, MS Project។

---

## 4. ការអនុវត្តដំណាក់កាល SDLC

ដំណាក់កាល SDLC ត្រូវបានអនុវត្តសម្រាប់៖
- **ភាពច្បាស់លាស់:** ផ្តល់ជំហានច្បាស់លាស់សម្រាប់ការអភិវឌ្ឍ។
- **ការគ្រប់គ្រងហានិភ័យ:** កាត់បន្ថយហានិភ័យនៃកំហុស។
- **ការបំពេញតម្រូវការ:** ធានាថាប្រព័ន្ធឆ្លើយតបនឹងតម្រូវការអ្នកប្រើប្រាស់។
- **ការថែទាំ:** ធ្វើឱ្យប្រព័ន្ធអាចប្រើប្រាស់បានយូរអង្វែង។

ឧទាហរណ៍៖ ក្រុមហ៊ុនអភិវឌ្ឍប្រព័ន្ធគ្រប់គ្រងស្តុកដោយប្រើ SDLC ដើម្បីធានាថាប្រព័ន្ធនោះមានគុណភាព និងអាចគ្រប់គ្រងបាន។

---

## 5. ការប្រៀបធៀបដំណាក់កាល SDLC

| ដំណាក់កាល             | តួនាទី                           | សកម្មភាព                        | ឧបករណ៍                       |
| :--------------------- | :------------------------------- | :------------------------------- | :---------------------------- |
| **ការវិភាគតម្រូវការ**  | អ្នកវិភាគប្រព័ន្ធ                | ប្រមូលតម្រូវការ                | Visio, Lucidchart             |
| **ការរចនា**           | អ្នករចនាប្រព័ន្ធ                | បង្កើតគំនូសតាង                | UML, ERD                     |
| **ការអភិវឌ្ឍ**         | អ្នកអភិវឌ្ឍន៍                   | សរសេរកូដ                       | Visual Studio Code, Eclipse   |
| **ការសាកល្បង**        | អ្នកសាកល្បង                    | ធ្វើតេស្តប្រព័ន្ធ                | Selenium, JUnit               |
| **ការដាក់ឱ្យប្រើប្រាស់** | អ្នកគ្រប់គ្រងគម្រោង           | ដាក់ឱ្យប្រើប្រាស់               | Jira, MS Project              |
| **ការថែទាំ**          | អ្នកថែទាំប្រព័ន្ធ               | ធ្វើបច្ចុប្បន្នភាព              | Jira, ServiceNow              |

---

## 6. ហេតុអ្វីត្រូវរៀន ដំណាក់កាល SDLC?

ការយល់ដឹងអំពីដំណាក់កាល SDLC គឺសំខាន់សម្រាប់៖
- **ការអភិវឌ្ឍប្រកបដោយប្រសិទ្ធភាព:** ជួយគ្រប់គ្រងគម្រោងឱ្យជោគជ័យ។
- **ការបំពេញតម្រូវការ:** ធានាថាប្រព័ន្ធឆ្លើយតបនឹងតម្រូវការអ្នកប្រើប្រាស់។
- **ការគ្រប់គ្រងហានិភ័យ:** កាត់បន្ថយហានិភ័យនៃការបរាជ័យ។
- **តម្រូវការទីផ្សារ:** អ្នកជំនាញ SDLC មានតម្រូវការខ្ពស់។
- **ភាពអាចធ្វើមាត្រដ្ឋាន:** ជួយបង្កើតប្រព័ន្ធដែលអាចពង្រីកបាន។
`,
  examples: [
    `<h3>ឧទាហរណ៍៖ ការវិភាគតម្រូវការសម្រាប់ប្រព័ន្ធគ្រប់គ្រងស្តុក</h3>
<p>ក្រុមហ៊ុនលក់រាយប្រមូលតម្រូវការពីនាយកដ្ឋានស្តុក ដើម្បីបង្កើតប្រព័ន្ធគ្រប់គ្រងស្តុក ដោយប្រើឧបករណ៍ដូចជា Lucidchart ដើម្បីគូសផែនទីតម្រូវការ។</p>
<hr>
<h3>ឧទាហរណ៍៖ ការសាកល្បងប្រព័ន្ធ CRM</h3>
<p>ក្រុមសាកល្បងប្រើ Selenium ដើម្បីធ្វើតេស្តប្រព័ន្ធ CRM ដើម្បីធានាថាមុខងារទាំងអស់ដំណើរការត្រឹមត្រូវ។</p>
`
  ],
  quiz: [
    {
      question: 'តើដំណាក់កាលដំបូងនៃ SDLC គឺជាអ្វី?',
      options: [
        'ការអភិវឌ្ឍ',
        'ការវិភាគតម្រូវការ',
        'ការសាកល្បង',
        'ការថែទាំ'
      ],
      correct: 1,
      explanation: 'ការវិភាគតម្រូវការ គឺជាដំណាក់កាលដំបូងនៃ SDLC។'
    },
    {
      question: 'តើសកម្មភាពសំខាន់នៅក្នុងដំណាក់កាលការរចនាគឺជាអ្វី?',
      options: [
        'សរសេរកូដ',
        'បង្កើតគំនូសតាង UML',
        'ធ្វើតេស្តប្រព័ន្ធ',
        'បណ្តុះបណ្តាលអ្នកប្រើប្រាស់'
      ],
      correct: 1,
      explanation: 'ការរចនាផ្តោតលើការបង្កើតគំនូសតាង UML និងស្ថាបត្យកម្មប្រព័ន្ធ។'
    },
    {
      question: 'តើឧបករណ៍ណាមួយខាងក្រោមប្រើសម្រាប់ការសាកល្បង?',
      options: [
        'Microsoft Visio',
        'Selenium',
        'Trello',
        'Lucidchart'
      ],
      correct: 1,
      explanation: 'Selenium ត្រូវបានប្រើសម្រាប់ការសាកល្បងប្រព័ន្ធ។'
    },
    {
      question: 'តើដំណាក់កាលការអភិវឌ្ឍពាក់ព័ន្ធនឹងអ្វី?',
      options: [
        'ប្រមូលតម្រូវការ',
        'សរសេរកូដ',
        'ធ្វើតេស្តប្រព័ន្ធ',
        'បណ្តុះបណ្តាលអ្នកប្រើប្រាស់'
      ],
      correct: 1,
      explanation: 'ការអភិវឌ្ឍពាក់ព័ន្ធនឹងការសរសេរកូដ និងអភិវឌ្ឍប្រព័ន្ធ។'
    },
    {
      question: 'តើអ្វីជាគោលបំណងនៃដំណាក់កាលការសាកល្បង?',
      options: [
        'បង្កើតគំនូសតាង',
        'កំណត់អត្តសញ្ញាណ និងជួសជុលកំហុស',
        'បណ្តុះបណ្តាលអ្នកប្រើប្រាស់',
        'ធ្វើបច្ចុប្បន្នភាពប្រព័ន្ធ'
      ],
      correct: 1,
      explanation: 'ការសាកល្បងផ្តោតលើការកំណត់អត្តសញ្ញាណ និងជួសជុលកំហុស។'
    },
    {
      question: 'តើដំណាក់កាលការដាក់ឱ្យប្រើប្រាស់រួមបញ្ចូលអ្វី?',
      options: [
        'ការសរសេរកូដ',
        'ការបណ្តុះបណ្តាលអ្នកប្រើប្រាស់',
        'ការបង្កើតគំនូសតាង',
        'ការវិភាគតម្រូវការ'
      ],
      correct: 1,
      explanation: 'ការដាក់ឱ្យប្រើប្រាស់រួមបញ្ចូលការបណ្តុះបណ្តាលអ្នកប្រើប្រាស់។'
    },
    {
      question: 'តើអ្នកណាជាអ្នកទទួលខុសត្រូវនៅក្នុងដំណាក់កាលការថែទាំ?',
      options: [
        'អ្នកវិភាគប្រព័ន្ធ',
        'អ្នកថែទាំប្រព័ន្ធ',
        'អ្នករចនាប្រព័ន្ធ',
        'អ្នកសាកល្បង'
      ],
      correct: 1,
      explanation: 'អ្នកថែទាំប្រព័ន្ធទទួលខុសត្រូវលើការធ្វើបច្ចុប្បន្នភាព និងកែលម្អប្រព័ន្ធ។'
    },
    {
      question: 'តើឧបករណ៍ Jira ប្រើសម្រាប់អ្វីនៅក្នុង SDLC?',
      options: [
        'ការសរសេរកូដ',
        'ការគ្រប់គ្រងគម្រោង',
        'ការគូសគំនូសតាង',
        'ការសាកល្បង'
      ],
      correct: 1,
      explanation: 'Jira ត្រូវបានប្រើសម្រាប់ការគ្រប់គ្រងគម្រោង។'
    },
    {
      question: 'តើដំណាក់កាលការថែទាំធ្វើអ្វី?',
      options: [
        'បង្កើតគំនូសតាង',
        'ធ្វើបច្ចុប្បន្នភាព និងកែលម្អប្រព័ន្ធ',
        'ប្រមូលតម្រូវការ',
        'ធ្វើតេស្តប្រព័ន្ធ'
      ],
      correct: 1,
      explanation: 'ការថែទាំផ្តោតលើការធ្វើបច្ចុប្បន្នភាព និងកែលម្អប្រព័ន្ធ។'
    },
    {
      question: 'តើអ្វីជាឧទាហរណ៍នៃសកម្មភាពនៅក្នុងការវិភាគតម្រូវការ?',
      options: [
        'សរសេរកូដ',
        'សម្ភាសន៍អ្នកពាក់ព័ន្ធ',
        'ធ្វើតេស្តប្រព័ន្ធ',
        'បង្កើត UI'
      ],
      correct: 1,
      explanation: 'ការវិភាគតម្រូវការរួមបញ្ចូលការសម្ភាសន៍អ្នកពាក់ព័ន្ធ។'
    },
    {
      question: 'តើឧបករណ៍ណាមួយខាងក្រោមប្រើសម្រាប់ការគូសគំនូសតាង?',
      options: [
        'Selenium',
        'Lucidchart',
        'Eclipse',
        'Postman'
      ],
      correct: 1,
      explanation: 'Lucidchart ត្រូវបានប្រើសម្រាប់ការគូសគំនូសតាង។'
    },
    {
      question: 'តើអ្វីជាគោលបំណងនៃដំណាក់កាលការដាក់ឱ្យប្រើប្រាស់?',
      options: [
        'បង្កើតគំនូសតាង',
        'ដាក់ឱ្យប្រើប្រាស់ប្រព័ន្ធនៅក្នុងបរិស្ថានផលិតកម្ម',
        'សរសេរកូដ',
        'កំណត់អត្តសញ្ញាណកំហុស'
      ],
      correct: 1,
      explanation: 'ការដាក់ឱ្យប្រើប្រាស់ផ្តោតលើការដាក់ប្រព័ន្ធទៅក្នុងបរិស្ថានផលិតកម្ម។'
    },
  ],
  lab: {
    task: `
បង្កើតផែនទីលំហូរការងារ (Flowchart) សម្រាប់ដំណើរការអភិវឌ្ឍប្រព័ន្ធគ្រប់គ្រងស្តុកដោយប្រើ SDLC។

**តម្រូវការ:**

1. **ផែនទីលំហូរការងារ:**
   - បង្កើត Flowchart ដែលបង្ហាញជំហាននៃ SDLC សម្រាប់ការអភិវឌ្ឍប្រព័ន្ធគ្រប់គ្រងស្តុក។
   - រួមបញ្ចូលជំហានដូចជា ការវិភាគតម្រូវការ ការរចនា ការអភិវឌ្ឍ ការសាកល្បង ការដាក់ឱ្យប្រើប្រាស់ និងការថែទាំ។

2. **ឧបករណ៍:**
   - ប្រើឧបករណ៍ដូចជា Microsoft Visio, Lucidchart, ឬ Draw.io ដើម្បីគូស Flowchart។

3. **លទ្ធផល:**
   - បង្ហាញ Flowchart ដែលមានសញ្ញាសម្គាល់ច្បាស់លាស់ (ឧទាហរណ៍៖ ប្រអប់សម្រាប់ជំហាន ព្រួញសម្រាប់លំហូរ)។

**ការណែនាំ:** សាកល្បងគូស Flowchart នៅលើឧបករណ៍អនឡាញ ឬក្រដាស ហើយធ្វើការពិនិត្យឡើងវិញជាមួយក្រុម។
    `,
    solution: `
**ផែនទីលំហូរការងារ (Flowchart) សម្រាប់ការអភិវឌ្ឍប្រព័ន្ធគ្រប់គ្រងស្តុក:**

1. **ការវិភាគតម្រូវការ** [ប្រអប់រាងចតុកោណ]
   - ប្រមូលតម្រូវការពីនាយកដ្ឋានស្តុក
   - [ព្រួញទៅជំហានបន្ទាប់]
2. **ការរចនា** [ប្រអប់រាងចតុកោណ]
   - បង្កើតគំនូសតាងប្រព័ន្ធ (ឧទាហរណ៍៖ UML, ERD)
   - [ព្រួញទៅជំហានបន្ទាប់]
3. **ការអភិវឌ្ឍ** [ប្រអប់រាងចតុកោណ]
   - សរសេរកូដ និងអភិវឌ្ឍប្រព័ន្ធ
   - [ព្រួញទៅជំហានបន្ទាប់]
4. **ការសាកល្បង** [ប្រអប់រាងចតុកោណ]
   - ធ្វើតេស្តប្រព័ន្ធ ដើម្បីស្វែងរកកំហុស
   - [ព្រួញទៅជំហានបន្ទាប់]
5. **ការដាក់ឱ្យប្រើប្រាស់** [ប្រអប់រាងចតុកោណ]
   - ដាក់ឱ្យប្រើប្រាស់ប្រព័ន្ធគ្រប់គ្រងស្តុក
   - [ព្រួញទៅជំហានបន្ទាប់]
6. **ការថែទាំ** [ប្រអប់រាងចតុកោណ]
   - ធ្វើបច្ចុប្បន្នភាព និងកែលម្អប្រព័ន្ធ
`
  }
};

export default MISLesson4_2Content;