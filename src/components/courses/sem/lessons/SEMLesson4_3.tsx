import type { LessonContent } from '../../../../types/LessonTypes';

const SEMLesson4_3Content: LessonContent = {
  title: 'ការបែងចែកនិងការគ្រប់គ្រងធនធាន',
  objectives: [
    'យល់ដឹងពីប្រភេទធនធាននៅក្នុងគម្រោង Software',
    'ស្គាល់ពីគោលការណ៍នៃការបែងចែកធនធានប្រកបដោយប្រសិទ្ធភាព',
    'រៀនពីបញ្ហាប្រឈមទូទៅក្នុងការគ្រប់គ្រងធនធាន',
    'យល់ពីរបៀបប្រើឧបករណ៍ដើម្បីតាមដានធនធាន',
    'អនុវត្តការបែងចែកធនធានសម្រាប់គម្រោងជាក់ស្តែង'
  ],
  content: `
# ការបែងចែកនិងការគ្រប់គ្រងធនធាន 🛠️

---

**ការគ្រប់គ្រងធនធាន** គឺជាដំណើរការនៃការកំណត់អត្តសញ្ញាណ ការបែងចែក និងការប្រើប្រាស់ធនធានប្រកបដោយប្រសិទ្ធភាពដើម្បីធានាថាគម្រោងអាចបញ្ចប់ទាន់ពេលនិងក្នុងថវិកា។

---

## 1. ប្រភេទធនធាន

នៅក្នុងគម្រោង Software ធនធានអាចបែងចែកជា ៣ ប្រភេទធំៗ៖

- **ធនធានមនុស្ស (Human Resources):** ក្រុមការងារ, អ្នកគ្រប់គ្រង, អ្នកឯកទេស។ នេះគឺជាធនធានដ៏សំខាន់បំផុត។
- **ធនធានសម្ភារៈ (Material Resources):** Hardware (កុំព្យូទ័រ, Server), Software (OS, កម្មវិធី), និងឧបករណ៍ផ្សេងៗ។
- **ធនធានហិរញ្ញវត្ថុ (Financial Resources):** ថវិកាដែលបានកំណត់សម្រាប់គម្រោង។

---

## 2. គោលការណ៍នៃការបែងចែកធនធាន

- **ភាពអាចរកបាន (Availability):** ធនធានត្រូវតែមាននៅពេលដែលត្រូវការ។
- **ការប្រើប្រាស់ឱ្យសមស្រប (Proper Utilization):** ប្រើប្រាស់ធនធានមនុស្សនិងសម្ភារៈឱ្យអស់លទ្ធភាពដោយមិនមានការងារលើសចំណុះ (overload)។
- **ការបត់បែន (Flexibility):** អាចបត់បែនបានប្រសិនបើមានការផ្លាស់ប្តូរនៅក្នុងគម្រោង។
- **ការត្រួតពិនិត្យ (Monitoring):** តាមដានការប្រើប្រាស់ធនធានជាប្រចាំ។

---

## 3. បញ្ហាប្រឈមក្នុងការគ្រប់គ្រងធនធាន

- **ការខ្វះធនធាន:** មិនមានធនធានគ្រប់គ្រាន់ដើម្បីបំពេញតម្រូវការគម្រោង។
- **ការងារលើសចំណុះ:** បុគ្គលិកមានការងារច្រើនហួសប្រមាណ ដែលអាចបណ្តាលឱ្យពួកគេអស់កម្លាំងនិងមានគុណភាពការងារទាប។
- **ធនធានមិនមានជំនាញគ្រប់គ្រាន់:** បុគ្គលិកមិនមានជំនាញដែលត្រូវការសម្រាប់កិច្ចការ។
- **ភាពមិនច្បាស់លាស់:** ការមិនដឹងច្បាស់ថាតើធនធានណាដែលត្រូវប្រើនិងនៅពេលណា។

---

## 4. ឧទាហរណ៍ជាក់ស្តែង: ការបែងចែកធនធាន

**សេណារីយ៉ូ:** ក្រុមអភិវឌ្ឍន៍ Website របស់អ្នកមានបុគ្គលិក ៥ នាក់៖

- **វិស្វករ Back-end (២ នាក់):** ជំនាញ Java 
- **វិស្វករ Front-end (២ នាក់):** ជំនាញ ReactJS
- **អ្នកធ្វើតេស្ត (១ នាក់):** ជំនាញ Quality Assurance

- **ការងារដែលត្រូវធ្វើ:**
  - បង្កើត Database (Back-end)
  - បង្កើត API (Back-end)
  - រចនា Website (Front-end)
  - សរសេរកូដ Website (Front-end)
  - ធ្វើតេស្តមុខងារ (Testing)

- **ការបែងចែកធនធាន:**
  - **Back-end Engineers:** ទទួលខុសត្រូវលើការបង្កើត Database និង API ។
  - **Front-end Engineers:** ទទួលខុសត្រូវលើការរចនា Website និងសរសេរកូដ។
  - **Tester:** ទទួលខុសត្រូវលើការធ្វើតេស្តបន្ទាប់ពីក្រុមអភិវឌ្ឍន៍បញ្ចប់ការងារ។

`,
  examples: [
    `### ឧទាហរណ៍: ការដោះស្រាយបញ្ហាធនធាន

**បញ្ហា:** វិស្វករ Front-end របស់អ្នកម្នាក់ឈប់ធ្វើការនៅពាក់កណ្តាលគម្រោង។

1. **ការកំណត់ផលប៉ះពាល់:** ការងារ Front-end នឹងត្រូវពន្យារពេល ហើយវិស្វករដែលនៅសល់នឹងមានការងារច្រើន។
2. **ផែនការដោះស្រាយ:**
   - **ជម្រើសទី ១ (រយៈពេលខ្លី):** ប្រើប្រាស់វិស្វករ Back-end ដែលមានជំនាញស្រដៀងគ្នាដើម្បីជួយ។
   - **ជម្រើសទី ២ (រយៈពេលវែង):** ជួលបុគ្គលិកថ្មី ឬប្រើប្រាស់ Freelancer ដើម្បីបំពេញចន្លោះ។
   - **ការកែសម្រួលផែនការ:** កែសម្រួលកាលវិភាគដើម្បីឆ្លុះបញ្ចាំងពីការពន្យារពេល។
`
  ],
  quiz: [
    {
      question: 'តើអ្វីជាប្រភេទធនធានសំខាន់បំផុតនៅក្នុងគម្រោង Software?',
      options: ['ថវិកា', 'ធនធានសម្ភារៈ', 'ធនធានមនុស្ស', 'Software'],
      correct: 2,
      explanation: 'ធនធានមនុស្សគឺជាធនធានដ៏សំខាន់បំផុតព្រោះពួកគេជាអ្នកបង្កើត Software ។'
    },
    {
      question: 'តើការបែងចែកធនធានប្រកបដោយប្រសិទ្ធភាពជួយអ្វីខ្លះ?',
      options: ['ធ្វើឱ្យគម្រោងពន្យារពេល', 'ធានាថាគម្រោងបញ្ចប់ទាន់ពេលនិងក្នុងថវិកា', 'បង្កើនការងារលើសចំណុះ', 'មិនមានអត្ថប្រយោជន៍ទេ'],
      correct: 1,
      explanation: 'ការបែងចែកធនធានល្អជួយឱ្យគម្រោងដំណើរការទៅមុខដោយរលូន។'
    },
    {
      question: 'តើការងារលើសចំណុះ (Overload) បង្កបញ្ហាអ្វីខ្លះ?',
      options: ['គុណភាពការងារកើនឡើង', 'បុគ្គលិកសប្បាយចិត្ត', 'បុគ្គលិកអស់កម្លាំងនិងគុណភាពការងារទាប', 'ការងារចប់លឿន'],
      correct: 2,
      explanation: 'ការងារលើសចំណុះអាចបណ្តាលឱ្យបុគ្គលិកអស់កម្លាំងនិងធ្វើឱ្យគុណភាពការងារធ្លាក់ចុះ។'
    },
    {
      question: 'តើការគ្រប់គ្រងធនធានរួមមានអ្វីខ្លះ?',
      options: ['ការទិញ Software តែមួយមុខ', 'ការបែងចែកនិងការប្រើប្រាស់ធនធាន', 'ការគ្រប់គ្រងតែបុគ្គលិក', 'ការគ្រប់គ្រងតែថវិកា'],
      correct: 1,
      explanation: 'ការគ្រប់គ្រងធនធានរួមមានការបែងចែកនិងការប្រើប្រាស់ធនធានមនុស្ស, សម្ភារៈ, និងហិរញ្ញវត្ថុ។'
    },
    {
      question: 'តើ Software Manager គួរធ្វើអ្វីប្រសិនបើមានការខ្វះធនធាន?',
      options: ['មិនអើពើនឹងបញ្ហា', 'បោះបង់គម្រោង', 'ស្នើសុំធនធានបន្ថែមឬកែសម្រួលផែនការ', 'ធ្វើការតែម្នាក់ឯង'],
      correct: 2,
      explanation: 'Software Manager គួរតែស្នើសុំធនធានបន្ថែមឬកែសម្រួលផែនការគម្រោង។'
    },
    {
      question: 'តើ Hardware ដូចជា Server ជាធនធានប្រភេទអ្វី?',
      options: ['ធនធានមនុស្ស', 'ធនធានហិរញ្ញវត្ថុ', 'ធនធានសម្ភារៈ', 'មិនមែនជាធនធានទេ'],
      correct: 2,
      explanation: 'Hardware ត្រូវបានចាត់ទុកជាធនធានសម្ភារៈ។'
    },
    {
      question: 'តើអ្វីជាគោលការណ៍នៃការគ្រប់គ្រងធនធានដែលទាក់ទងនឹងការបត់បែន?',
      options: ['ភាពអាចរកបាន', 'ការប្រើប្រាស់ឱ្យសមស្រប', 'ភាពបត់បែន', 'ការត្រួតពិនិត្យ'],
      correct: 2,
      explanation: 'ការគ្រប់គ្រងធនធានត្រូវមានភាពបត់បែនដើម្បីសម្របខ្លួនទៅនឹងការផ្លាស់ប្តូរ។'
    },
    {
      question: 'តើការគ្រប់គ្រងធនធានមានទំនាក់ទំនងជាមួយ Project Planning ដែរឬទេ?',
      options: ['បាទ/ចាស', 'ទេ', 'អាស្រ័យលើគម្រោង', 'មិនមានទំនាក់ទំនងទេ'],
      correct: 0,
      explanation: 'បាទ/ចាស, ការគ្រប់គ្រងធនធានជាផ្នែកមួយដ៏សំខាន់នៃការរៀបចំផែនការគម្រោង។'
    },
    {
      question: 'តើ Software Manager អាចប្រើឧបករណ៍អ្វីខ្លះដើម្បីតាមដានធនធាន?',
      options: ['តែប៊ិកនិងក្រដាស', 'Microsoft Excel ឬ Project Management Tools', 'មិនចាំបាច់តាមដានទេ', 'ប្រើតែទូរស័ព្ទ'],
      correct: 1,
      explanation: 'Project Management Tools ដូចជា Jira, Trello, ឬ Microsoft Project អាចជួយតាមដានធនធានបានយ៉ាងល្អ។'
    }
  ],
  lab: {
    task: `
**សេណារីយ៉ូ:** អ្នកជា Software Manager សម្រាប់ក្រុមអភិវឌ្ឍន៍ Software ដែលមានសមាជិក ៣ នាក់៖ Backend Developer, Frontend Developer, និង UI/UX Designer។ អ្នកមានគម្រោងបង្កើត Mobile App សម្រាប់ហាងលក់ផ្កា។

**តម្រូវការ:**
1.  កំណត់ការងារយ៉ាងតិច ៤ ដែលត្រូវធ្វើនៅក្នុងគម្រោង។
2.  បែងចែកការងារទាំងនោះទៅឱ្យសមាជិកក្រុមម្នាក់ៗ។
3.  ពន្យល់ពីរបៀបដែលអ្នកនឹងធានាថាគ្មាននរណាម្នាក់មានការងារលើសចំណុះ។
    `,
    solution: `
**ការបែងចែកធនធានសម្រាប់ Mobile App ហាងផ្កា**

**១. កិច្ចការដែលត្រូវធ្វើ:**
   - កិច្ចការទី ១: រចនាការបង្ហាញរបស់ App (UI/UX)
   - កិច្ចការទី ២: អភិវឌ្ឍន៍ Backend (Server, Database)
   - កិច្ចការទី ៣: អភិវឌ្ឍន៍ Frontend (App Interface)
   - កិច្ចការទី ៤: ធ្វើតេស្តនិងជួសជុលកំហុស

**២. ការបែងចែកធនធាន:**
   - **UI/UX Designer:** ទទួលខុសត្រូវលើកិច្ចការទី ១។
   - **Backend Developer:** ទទួលខុសត្រូវលើកិច្ចការទី ២។
   - **Frontend Developer:** ទទួលខុសត្រូវលើកិច្ចការទី ៣។
   - **ការធ្វើតេស្ត:** អាចធ្វើឡើងដោយក្រុមទាំងមូល ឬបែងចែកការងារទៅអ្នកផ្សេង។

**៣. ការគ្រប់គ្រងការងារលើសចំណុះ:**
   - ខ្ញុំនឹងប្រើប្រាស់ **Kanban Board** ដើម្បីតាមដានលំហូរការងាររបស់ក្រុម។
   - ខ្ញុំនឹងកំណត់ **Limit Work in Progress (WIP)** ដើម្បីធានាថាអ្នកអភិវឌ្ឍន៍ម្នាក់ៗមិនមានការងារច្រើនហួសប្រមាណ។
   - ខ្ញុំនឹងរៀបចំ **Daily Stand-up** ខ្លីៗដើម្បីដឹងពីបញ្ហាឬឧបសគ្គដែលពួកគេជួបប្រទះ។
   - ខ្ញុំនឹងធ្វើការចរចាជាមួយអតិថិជនប្រសិនបើមានការផ្លាស់ប្តូរដែលតម្រូវឱ្យបន្ថែមការងារ។
`
  }
};

export default SEMLesson4_3Content;