import type { LessonContent } from '../../../../types/LessonTypes';

const TerminologyLesson5_1Content: LessonContent = {
  title: 'វាក្យស័ព្ទទាក់ទងនឹងអារេ',
  objectives: [
    'យល់ពីអត្ថន័យនៃវាក្យស័ព្ទទាក់ទងនឹងអារេ (Array Terms)',
    'ស្គាល់ពាក្យសំខាន់ៗដូចជា list, index, append, និង slice',
    'រៀនការប្រើអារេ (lists) ក្នុង Python',
    'ស្វែងយល់ពីការគ្រប់គ្រងទិន្នន័យជាបណ្តុំនៅក្នុងអារេ',
    'អនុវត្តការប្រើអារេក្នុងកម្មវិធីសាមញ្ញ'
  ],
  content: `
# វាក្យស័ព្ទទាក់ទងនឹងអារេ 📚💻

---

**វាក្យស័ព្ទទាក់ទងនឹងអារេ (Array Terms)** គឺជាពាក្យបច្ចេកទេសដែលប្រើសម្រាប់គ្រប់គ្រងទិន្នន័យជាបណ្តុំនៅក្នុងរចនាសម្ព័ន្ធដែលហៅថា អារេ (ឬ list ក្នុង Python)។

---

## 1. អ្វីទៅជា Array Terms?

- **Array (List):** រចនាសម្ព័ន្ធទិន្នន័យដែលផ្ទុកធាតុជាលំដាប់។
- **សារៈសំខាន់:**
  - អនុញ្ញាតឱ្យផ្ទុកទិន្នន័យច្រើនក្នុងអថេរតែមួយ។
  - ងាយស្រួលក្នុងការចូលប្រើ និងកែប្រែទិន្នន័យ។
  - បង្កើនភាពបត់បែនក្នុងការគ្រប់គ្រងទិន្នន័យ។

**ពាក្យសំខាន់ៗ:**
- **List:** បណ្តុំទិន្នន័យដែលអាចផ្លាស់ប្តូរបាននៅក្នុង Python។
- **Index:** លេខដែលបង្ហាញទីតាំងនៃធាតុនៅក្នុង list (ចាប់ផ្តើមពី 0)។
- **Append:** បន្ថែមធាតុទៅចុងបញ្ចប់នៃ list។
- **Slice:** យកផ្នែកមួយនៃ list ដោយប្រើជួរនៃ index។

---

## 2. ការប្រើ Array Terms ក្នុង Python

- **ការបង្កើត List:**
  \`\`\`python
  fruits = ["ផ្លែប៉ោម", "ចេក", "ក្រូច"]
  print(fruits)  # បង្ហាញ: ['ផ្លែប៉ោម', 'ចេក', 'ក្រូច']
  \`\`\`
- **ការប្រើ Index:**
  \`\`\`python
  fruits = ["ផ្លែប៉ោម", "ចេក", "ក្រូច"]
  print(fruits[0])  # បង្ហាញ: ផ្លែប៉ោម
  print(fruits[-1])  # បង្ហាញ: ក្រូច
  \`\`\`
- **ការប្រើ Append:**
  \`\`\`python
  fruits = ["ផ្លែប៉ោម", "ចេក"]
  fruits.append("ស្វាយ")
  print(fruits)  # បង្ហាញ: ['ផ្លែប៉ោម', 'ចេក', 'ស្វាយ']
  \`\`\`
- **ការប្រើ Slice:**
  \`\`\`python
  numbers = [1, 2, 3, 4, 5]
  print(numbers[1:4])  # បង្ហាញ: [2, 3, 4]
  \`\`\`

---

## 3. ការអនុវត្តក្នុងកម្មវិធី

**ឧទាហរណ៍កូដ:**

\`\`\`python
# បង្កើត list និងបន្ថែមធាតុ
scores = [85, 90, 78]
scores.append(95)
print(f"ពិន្ទុ: {scores}")  # បង្ហាញ: ពិន្ទុ: [85, 90, 78, 95]
\`\`\`

**ឧទាហរណ៍ជាមួយ slice:**

\`\`\`python
names = ["សុខា", "វិច្ឆិកា", "សុភ័ក្ត្រ", "រតនា"]
selected = names[1:3]
print(f"ឈ្មោះជ្រើសរើស: {selected}")  # បង្ហាញ: ឈ្មោះជ្រើសរើស: ['វិច្ឆិកា', 'សុភ័ក្ត្រ']
\`\`\`

---

## 4. ហេតុអ្វីសំខាន់?

- **ការផ្ទុកទិន្នន័យ:** អនុញ្ញាតឱ្យផ្ទុកទិន្នន័យច្រើនក្នុងអថេរតែមួយ។
- **ភាពងាយស្រួល:** ងាយស្រួលក្នុងការចូលប្រើ និងកែប្រែទិន្នន័យ។
- **ភាពបត់បែន:** អាចគ្រប់គ្រងទិន្នន័យជាច្រើនប្រភេទ។
`,
  examples: [
    `<h3>ឧទាហរណ៍៖ ការប្រើ List និង Append</h3>
<p>បន្ថែមធាតុទៅក្នុង list។</p>
<pre><code class="language-python">
fruits = ["ផ្លែប៉ោម", "ចេក"]
fruits.append("ស្វាយ")
print(fruits)  # បង្ហាញ: ['ផ្លែប៉ោម', 'ចេក', 'ស្វាយ']
</code></pre>
<hr>
<h3>ឧទាហរណ៍៖ ការប្រើ Slice</h3>
<p>យកផ្នែកមួយនៃ list។</p>
<pre><code class="language-python">
numbers = [10, 20, 30, 40, 50]
subset = numbers[2:5]
print(subset)  # បង្ហាញ: [30, 40, 50]
</code></pre>
`
  ],
  quiz: [
    {
      question: 'តើ Array (List) ប្រើសម្រាប់អ្វី?',
      options: [
        'ផ្ទុកទិន្នន័យតែមួយ',
        'ផ្ទុកទិន្នន័យជាបណ្តុំ',
        'ធ្វើការងារម្តងហើយម្តងទៀត',
        'គ្រប់គ្រង Hardware'
      ],
      correct: 1,
      explanation: 'Array (List) ប្រើសម្រាប់ផ្ទុកទិន្នន័យជាបណ្តុំ។'
    },
    {
      question: 'តើ Index សំដៅលើអ្វី?',
      options: [
        'ទីតាំងនៃធាតុនៅក្នុង list',
        'បន្ថែមធាតុទៅ list',
        'លុបធាតុចេញពី list',
        'ផ្ទុកទិន្នន័យ'
      ],
      correct: 0,
      explanation: 'Index សំដៅលើទីតាំងនៃធាតុនៅក្នុង list។'
    },
    {
      question: 'តើពាក្យ `append` ធ្វើអ្វី?',
      options: [
        'លុបធាតុចេញពី list',
        'បន្ថែមធាតុទៅចុងបញ្ចប់នៃ list',
        'កែប្រែធាតុក្នុង list',
        'ផ្ទុកទិន្នន័យ'
      ],
      correct: 1,
      explanation: '`append` បន្ថែមធាតុទៅចុងបញ្ចប់នៃ list។'
    },
    {
      question: 'តើអ្វីជាលទ្ធផលនៃកូដខាងក្រោម?\n```python\nfruits = ["ផ្លែប៉ោម", "ចេក", "ក្រូច"]\nprint(fruits[1])\n```',
      options: ['ផ្លែប៉ោម', 'ចេក', 'ក្រូច', 'Error'],
      correct: 1,
      explanation: 'Index 1 នៅក្នុង list ផ្តល់តម្លៃ "ចេក"។'
    },
    {
      question: 'តើពាក្យ `slice` ប្រើសម្រាប់អ្វី?',
      options: [
        'បន្ថែមធាតុទៅ list',
        'យកផ្នែកមួយនៃ list',
        'លុបធាតុចេញពី list',
        'ផ្ទុកទិន្នន័យ'
      ],
      correct: 1,
      explanation: '`slice` ប្រើសម្រាប់យកផ្នែកមួយនៃ list។'
    },
    {
      question: 'តើអ្វីជាលទ្ធផលនៃកូដខាងក្រោម?\n```python\nnumbers = [1, 2, 3, 4, 5]\nprint(numbers[2:4])\n```',
      options: ['[1, 2]', '[2, 3]', '[3, 4]', 'Error'],
      correct: 2,
      explanation: 'Slice [2:4] យកធាតុពី index 2 ដល់ 3 ដូច្នេះបង្ហាញ [3, 4]។'
    },
    {
      question: 'តើ Array (List) ជួយអ្វី?',
      options: [
        'បង្កើនភាពស្មុគស្មាញ',
        'ផ្ទុក និងគ្រប់គ្រងទិន្នន័យជាបណ្តុំ',
        'បង្កើត UI',
        'គ្រប់គ្រង Hardware'
      ],
      correct: 1,
      explanation: 'Array (List) ផ្ទុក និងគ្រប់គ្រងទិន្នន័យជាបណ្តុំ។'
    },
    {
      question: 'តើអ្វីជាលទ្ធផលនៃកូដខាងក្រោម?\n```python\nfruits = ["ចេក", "ស្វាយ"]\nfruits.append("ក្រូច")\nprint(fruits)\n```',
      options: ['["ចេក", "ស្វាយ"]', '["ចេក", "ស្វាយ", "ក្រូច"]', '["ក្រូច"]', 'Error'],
      correct: 1,
      explanation: '`append` បន្ថែម "ក្រូច" ទៅចុងបញ្ចប់ ដូច្នេះបង្ហាញ ["ចេក", "ស្វាយ", "ក្រូច"]។'
    },
    {
      question: 'តើកូដខាងក្រោមមានប៉ុន្មានធាតុនៅក្នុងលទ្ធផល?\n```python\nnumbers = [10, 20, 30, 40, 50]\nprint(numbers[1:3])\n```',
      options: ['1', '2', '3', '4'],
      correct: 1,
      explanation: 'Slice [1:3] យកធាតុពី index 1 ដល់ 2 ដូច្នេះមាន 2 ធាតុ។'
    },
    {
      question: 'តើអ្វីជាលទ្ធផលនៃកូដខាងក្រោម?\n```python\nitems = ["a", "b", "c", "d"]\nprint(items[-2])\n```',
      options: ['a', 'b', 'c', 'd'],
      correct: 2,
      explanation: 'Index -2 ចង្អុលទៅធាតុទីពីរពីចុង ដូច្នេះបង្ហាញ "c"។'
    },
    {
      question: 'តើ List ខុសពីអថេរធម្មតាដោយរបៀបណា?',
      options: [
        'List អាចផ្ទុកទិន្នន័យច្រើនធាតុ',
        'List មិនអាចផ្លាស់ប្តូរបាន',
        'List ប្រើសម្រាប់ loop តែប៉ុណ្ណោះ',
        'List ប្រើសម្រាប់ conditions'
      ],
      correct: 0,
      explanation: 'List អាចផ្ទុកទិន្នន័យច្រើនធាតុ។'
    },
    {
      question: 'តើ Array (List) ធ្វើឱ្យកូដមានអត្ថន័យដោយរបៀបណា?',
      options: [
        'បង្កើនភាពស្មុគស្មាញ',
        'ធ្វើឱ្យការគ្រប់គ្រងទិន្នន័យកាន់តែងាយស្រួល',
        'បង្កើត UI',
        'គ្រប់គ្រង Hardware'
      ],
      correct: 1,
      explanation: 'Array (List) ធ្វើឱ្យការគ្រប់គ្រងទិន្នន័យកាន់តែងាយស្រួល។'
    }
  ],
  lab: {
    task: `
បង្កើតកម្មវិធី Python ដែលប្រើ Array Terms។

**តម្រូវការ:**
1. **ការបញ្ចូលទិន្នន័យ:**
   - ស្នើសុំឈ្មោះអ្នកប្រើ (String)។
   - ស្នើសុំចំនួនពិន្ទុដែលចង់បញ្ចូល (Integer)។
2. **ការអនុវត្ត:**
   - បង្កើត list ដើម្បីផ្ទុកពិន្ទុ។
   - ប្រើ loop ដើម្បីបញ្ចូលពិន្ទុចំនួនដែលបានស្នើសុំ។
   - ប្រើ slice ដើម្បីបង្ហាញពិន្ទុ 2 ចុងក្រោយ។
   - គណនាពិន្ទុជាមធ្យម។
   - បង្ហាញសារជាមួយឈ្មោះ ពិន្ទុ 2 ចុងក្រោយ និងពិន្ទុជាមធ្យម។
3. **ការបង្ហាញលទ្ធផល:**
   - បង្ហាញសារដូចជា: "[ឈ្មោះ]: ពិន្ទុ 2 ចុងក្រោយ = [ពិន្ទុ], ជាមធ្យម = [ជាមធ្យម]"។
4. **Error Handling:**
   - ប្រើ \`try-except\` ដើម្បីគ្រប់គ្រងករណីចំនួន ឬពិន្ទុមិនមែនជាលេខគត់។

**ការណែនាំ:** ប្រើ VS Code ឬ PyCharm ដើម្បីសរសេរកម្មវិធី។
    `,
    solution: `
\`\`\`python
try:
    # Variable សម្រាប់ផ្ទុកឈ្មោះ
    user_name = input("បញ្ចូលឈ្មោះរបស់អ្នក: ")
    if not user_name.strip():
        raise ValueError("ឈ្មោះមិនអាចទទេបាន!")
    
    # Variable សម្រាប់ផ្ទុកចំនួនពិន្ទុ
    num_scores = int(input("បញ្ចូលចំនួនពិន្ទុដែលអ្នកចង់បញ្ចូល: "))
    if num_scores <= 0:
        raise ValueError("ចំនួនពិន្ទុត្រូវតែធំជាង 0!")
    
    # បង្កើត list សម្រាប់ផ្ទុកពិន្ទុ
    scores = []
    for i in range(num_scores):
        score = int(input(f"បញ្ចូលពិន្ទុទី {i+1}: "))
        scores.append(score)
    
    # ប្រើ slice ដើម្បីយកពិន្ទុ 2 ចុងក្រោយ
    last_two = scores[-2:] if len(scores) >= 2 else scores
    
    # គណនាជាមធ្យម
    average = sum(scores) / len(scores)
    
    # បង្ហាញលទ្ធផល
    print(f"{user_name}: ពិន្ទុ 2 ចុងក្រោយ = {last_two}, ជាមធ្យម = {average}")
except ValueError as e:
    print(f"កំហុស: {e}")
\`\`\`
`
  }
};

export default TerminologyLesson5_1Content;