import type { Lesson } from '../../../../types/LessonTypes';

const MISLesson4_3Content: Lesson = {
  id: 'mis-lesson-4-3',
  title: 'Agile ទល់នឹង Waterfall',
  objectives: [
    'យល់ដឹងអំពីគំរូ Agile និង Waterfall នៅក្នុង SDLC',
    'ស្វែងយល់ពីភាពខុសគ្នារវាង Agile និង Waterfall',
    'ស្គាល់គុណសម្បត្តិ និងគុណវិបត្តិនៃគំរូទាំងពីរ',
    'អនុវត្តគំរូ Agile និង Waterfall ក្នុងករណីសិក្សាអាជីវកម្ម',
    'ប្រៀបធៀបការប្រើប្រាស់ Agile និង Waterfall ទៅនឹងប្រភេទគម្រោងផ្សេងៗ',
  ],
  content: `
# Agile ទល់នឹង Waterfall 🌐⚖️

---

**Agile និង Waterfall** គឺជាគំរូសំខាន់ពីរនៅក្នុង **វដ្តជីវិតនៃការអភិវឌ្ឍប្រព័ន្ធ (SDLC)** ដែលប្រើសម្រាប់គ្រប់គ្រងការអភិវឌ្ឍប្រព័ន្ធព័ត៌មាន។ គំរូទាំងពីរមានវិធីសាស្ត្រ និងគោលការណ៍ខុសគ្នា ដែលសមស្របទៅនឹងប្រភេទគម្រោងផ្សេងៗ។

---

## 1. គំរូ Waterfall

**Waterfall Model** គឺជាគំរូ SDLC ដែលធ្វើការជាលំដាប់ ដោយជំហាននីមួយៗត្រូវបញ្ចប់មុននឹងចាប់ផ្តើមជំហានបន្ទាប់។

### លក្ខណៈពិសេស៖
- **រចនាសម្ព័ន្ធជាលំដាប់:** ជំហានដូចជា ការវិភាគតម្រូវការ ការរចនា ការអភិវឌ្ឍ ការសាកល្បង និងការដាក់ឱ្យប្រើប្រាស់ ត្រូវបានអនុវត្តជាបន្តបន្ទាប់។
- **ឯកសារច្បាស់លាស់:** ផលិតឯកសារលម្អិតនៅគ្រប់ជំហាន។
- **ភាពមិនបត់បែន:** ការផ្លាស់ប្តូរតម្រូវការពិបាកនៅពេលគម្រោងចាប់ផ្តើម។

### គុណសម្បត្តិ៖
- ងាយស្រួលគ្រប់គ្រង ដោយសារមានជំហានច្បាស់លាស់។
- ស័ក្តិសមសម្រាប់គម្រោងដែលមានតម្រូវការច្បាស់លាស់ (ឧទាហរណ៍៖ ប្រព័ន្ធគ្រប់គ្រងហិរញ្ញវត្ថុ)។
- ផលិតឯកសារលម្អិតសម្រាប់ការថែទាំ។

### គុណវិបត្តិ៖
- មិនស័ក្តិសមសម្រាប់គម្រោងដែលមានតម្រូវការផ្លាស់ប្តូរ។
- ការសាកល្បងធ្វើឡើងនៅចុងគម្រោង ដែលអាចបង្កហានិភ័យ។
- អតិថិជនមិនអាចឃើញលទ្ធផលរហូតដល់ចុងគម្រោង។

---

## 2. គំរូ Agile

**Agile Model** គឺជាគំរូ SDLC ដែលផ្តោតលើការអភិវឌ្ឍជាវដ្តខ្លីៗ (Sprints) និងការសហការជាមួយអតិថិជន។

### លក្ខណៈពិសេស៖
- **ការអភិវឌ្ឍជាវដ្ត:** បែងចែកគម្រោងជាផ្នែកតូចៗ ហៅថា Iterations ឬ Sprints។
- **ការសហការ:** អតិថិជន និងក្រុមអភិវឌ្ឍន៍ធ្វើការជាមួយគ្នាជាបន្តបន្ទាប់
- **ភាពបត់បែន:** អនុញ្ញាតឱ្យផ្លាស់ប្តូរតម្រូវការនៅគ្រប់ដំណាក់កាល។

### គុណសម្បត្តិ៖
- អនុញ្ញាតឱ្យផ្លាស់ប្តូរតម្រូវការបានយ៉ាងងាយស្រួល។
- ផ្តល់លទ្ធផលផ្នែកខ្លះ (Incremental Delivery) ដែលអតិថិជនអាចសាកល្បងបានឆាប់។
- ស័ក្តិសមសម្រាប់គម្រោងស្មុគស្មាញ ឬមិនច្បាស់លាស់ (ឧទាហរណ៍៖ Mobile App)។

### គុណវិបត្តិ៖
- ត្រូវការការសហការញឹកញាប់ជាមួយអតិថិជន។
- ឯកសារអាចមិនលម្អិតដូច Waterfall។
- អាចពិបាកគ្រប់គ្រងសម្រាប់ក្រុមធំ។

---

## 3. ការប្រៀបធៀប Agile និង Waterfall

| លក្ខណៈ               | Waterfall                            | Agile                                |
| :-------------------- | :---------------------------------- | :---------------------------------- |
| **រចនាសម្ព័ន្ធ**      | ជាលំដាប់                           | ជាវដ្តខ្លីៗ (Iterative)            |
| **ភាពបត់បែន**        | មិនបត់បែន                         | បត់បែន                             |
| **ការចូលរួមអតិថិជន** | តិច (នៅដើម និងចុងគម្រោង)       | ច្រើន (ជាបន្តបន្ទាប់)              |
| **ឯកសារ**            | លម្អិត                             | តិចជាង ផ្តោតលើការងារ           |
| **ការដាក់ឱ្យប្រើប្រាស់** | នៅចុងគម្រោង                     | ជាផ្នែកៗ (Incremental)            |
| **ស័ក្តិសមសម្រាប់**  | គម្រោងច្បាស់លាស់                 | គម្រោងស្មុគស្មាញ ឬផ្លាស់ប្តូរ     |

---

## 4. ការអនុវត្ត Agile និង Waterfall

- **Waterfall:** ស័ក្តិសមសម្រាប់គម្រោងដែលមានតម្រូវការច្បាស់លាស់ ដូចជាប្រព័ន្ធគ្រប់គ្រងហិរញ្ញវត្ថុ ឬប្រព័ន្ធរដ្ឋាភិបាល។
- **Agile:** ស័ក្តិសមសម្រាប់គម្រោងដែលតម្រូវការផ្លាស់ប្តូរ ដូចជា Mobile App ឬ Web Application។

ឧទាហរណ៍៖ ក្រុមហ៊ុនប្រើ Waterfall ដើម្បីអភិវឌ្ឍប្រព័ន្ធគ្រប់គ្រងស្តុកដែលមានតម្រូវការច្បាស់លាស់ និងប្រើ Agile សម្រាប់ Mobile App ដែលតម្រូវការអាចផ្លាស់ប្តូរ។

---

## 5. ឧបករណ៍សម្រាប់ Agile និង Waterfall

- **Waterfall:** Microsoft Project, Visio, Lucidchart (សម្រាប់គូសផែនទី)។
- **Agile:** Jira, Trello, Scrum Boards (សម្រាប់គ្រប់គ្រង Sprints)។

---

## 6. ហេតុអ្វីត្រូវរៀន Agile និង Waterfall?

ការយល់ដឹងអំពី Agile និង Waterfall គឺសំខាន់សម្រាប់៖
- **ការជ្រើសរើសគំរូត្រឹមត្រូវ:** ជួយជ្រើសរើសគំរូដែលសមស្របនឹងគម្រោង។
- **ការគ្រប់គ្រងគម្រោង:** បង្កើនប្រសិទ្ធភាពការគ្រប់គ្រងគម្រោង។
- **ការសហការ:** ធ្វើឱ្យក្រុមអភិវឌ្ឍន៍ និងអតិថិជនសហការគ្នាបានល្អ។
- **តម្រូវការទីផ្សារ:** អ្នកជំនាញ Agile និង Waterfall មានតម្រូវការខ្ពស់។
- **ភាពបត់បែន:** អនុញ្ញាតឱ្យសម្របខ្លួនទៅនឹងប្រភេទគម្រោងផ្សេងៗ។
`,
  examples: [
    `<h3>ឧទាហរណ៍៖ ការប្រើ Waterfall ក្នុងការអភិវឌ្ឍប្រព័ន្ធគ្រប់គ្រងស្តុក</h3>
<p>ក្រុមហ៊ុនលក់រាយមួយបានជ្រើសរើសប្រើ <strong>Waterfall Model</strong> ដើម្បីអភិវឌ្ឍប្រព័ន្ធគ្រប់គ្រងស្តុក។ ដំណើរការនេះចាប់ផ្តើមដោយការប្រមូលតម្រូវការទាំងអស់ពីនាយកដ្ឋានស្តុក ដូចជាការតាមដានបរិមាណស្តុក និងការរាយការណ៍។ បន្ទាប់មក ក្រុមអភិវឌ្ឍន៍បានបង្កើតផែនការរចនាប្រព័ន្ធ ដែលរួមបញ្ចូលគំនូសតាងដំណើរការ។ បន្ទាប់ពីការរចនាត្រូវបានអនុម័ត ពួកគេបានអភិវឌ្ឍប្រព័ន្ធទាំងមូល។ ការសាកល្បងត្រូវបានធ្វើឡើងបន្ទាប់ពីការអភិវឌ្ឍបញ្ចប់ ដើម្បីធានាថាប្រព័ន្ធដំណើរការត្រឹមត្រូវ។ ទីបំផុត ប្រព័ន្ធត្រូវបានដាក់ឱ្យប្រើប្រាស់នៅក្នុងឃ្លាំងរបស់ក្រុមហ៊ុន។ ដំណើរការនេះធ្វើឡើងជាលំដាប់ ដោយមិនអនុញ្ញាតឱ្យមានការផ្លាស់ប្តូរតម្រូវការនៅពាក់កណ្តាលគម្រោង។</p>
<hr>
<h3>ឧទាហរណ៍៖ ការប្រើ Agile ក្នុងការអភិវឌ្ឍ Mobile App</h3>
<p>ក្រុមអភិវឌ្ឍន៍មួយបានប្រើ <strong>Agile Model</strong> ដើម្បីបង្កើតកម្មវិធីទូរស័ព្ទ (Mobile App) សម្រាប់ការលក់អនឡាញ។ ពួកគេបានបែងចែកគម្រោងជាវដ្តខ្លីៗ ហៅថា Sprints ដែលនីមួយៗមានរយៈពេលពីរសប្តាហ៍។ នៅក្នុង Sprint ទីមួយ ពួកគេបានបង្កើតមុខងារសម្រាប់បង្ហាញផលិតផល និងបានបង្ហាញវាទៅអតិថិជនសម្រាប់មតិយោបល់។ នៅ Sprint ទីពីរ ពួកគេបានបន្ថែមមុខងារទូទាត់តាមអនឡាញ ដោយកែសម្រួលដោយផ្អែកលើមតិយោបល់របស់អតិថិជន។ នៅ Sprint ទីបី ពួកគេបានកែលម្អចំណុចប្រទាក់អ្នកប្រើ (UI) ដើម្បីធ្វើឱ្យកម្មវិធីកាន់តែងាយស្រួលប្រើ។ វិធីសាស្ត្រនេះអនុញ្ញាតឱ្យក្រុមអភិវឌ្ឍន៍សហការជាមួយអតិថិជន និងកែលម្អបន្តបន្ទាប់</p>
`
  ],
  quiz: [
    {
      question: 'តើគំរូ Waterfall មានលក្ខណៈពិសេសអ្វី?',
      options: [
        'ការអភិវឌ្ឍជាវដ្តខ្លីៗ',
        'ជំហានជាលំដាប់',
        'ការសហការញឹកញាប់ជាមួយអតិថិជន',
        'ការផ្លាស់ប្តូរតម្រូវការងាយស្រួល'
      ],
      correct: 1,
      explanation: 'Waterfall Model មានជំហានជាលំដាប់ ដែលជំហាននីមួយៗត្រូវបញ្ចប់មុនជំហានបន្ទាប់។'
    },
    {
      question: 'តើគំរូ Agile ផ្តោតលើអ្វី?',
      options: [
        'ឯកសារលម្អិត',
        'ការអភិវឌ្ឍជាវដ្តខ្លីៗ និងការសហការ',
        'ការធ្វើការជាលំដាប់',
        'ការសាកល្បងនៅចុងគម្រោង'
      ],
      correct: 1,
      explanation: 'Agile Model ផ្តោតលើការអភិវឌ្ឍជាវដ្តខ្លីៗ (Sprints) និងការសហការជាមួយអតិថិជន។'
    },
    {
      question: 'តើគុណសម្បត្តិនៃ Waterfall គឺជាអ្វី?',
      options: [
        'អនុញ្ញាតឱ្យផ្លាស់ប្តូរតម្រូវការងាយស្រួល',
        'ផលិតឯកសារលម្អិត',
        'ផ្តល់លទ្ធផលផ្នែកខ្លះឆាប់',
        'សហការញឹកញាប់ជាមួយអតិថិជន'
      ],
      correct: 1,
      explanation: 'Waterfall Model ផលិតឯកសារលម្អិត ដែលជួយក្នុងការថែទាំ។'
    },
    {
      question: 'តើគុណវិបត្តិនៃ Agile គឺជាអ្វី?',
      options: [
        'ងាយស្រួលគ្រប់គ្រង',
        'ឯកសារអាចមិនលម្អិត',
        'ស័ក្តិសមសម្រាប់គម្រោងច្បាស់លាស់',
        'មានជំហានជាលំដាប់'
      ],
      correct: 1,
      explanation: 'Agile អាចមានឯកសារមិនលម្អិត ដោយសារផ្តោតលើការងារ។'
    },
    {
      question: 'តើគំរូណាមួយស័ក្តិសមសម្រាប់គម្រោងដែលមានតម្រូវការផ្លាស់ប្តូរ?',
      options: [
        'Waterfall',
        'Agile',
        'V-Model',
        'Spiral'
      ],
      correct: 1,
      explanation: 'Agile Model ស័ក្តិសមសម្រាប់គម្រោងដែលមានតម្រូវការផ្លាស់ប្តូរ។'
    },
    {
      question: 'តើឧបករណ៍ណាមួយខាងក្រោមប្រើសម្រាប់ Agile?',
      options: [
        'Microsoft Visio',
        'Jira',
        'Lucidchart',
        'Microsoft Project'
      ],
      correct: 1,
      explanation: 'Jira ត្រូវបានប្រើសម្រាប់គ្រប់គ្រង Sprints ក្នុង Agile។'
    },
    {
      question: 'តើ Waterfall Model ធ្វើការសាកល្បងនៅពេលណា?',
      options: [
        'នៅដើមគម្រោង',
        'នៅចុងគម្រោង',
        'នៅគ្រប់ជំហាន',
        'នៅកណ្តាលគម្រោង'
      ],
      correct: 1,
      explanation: 'Waterfall Model ធ្វើការសាកល្បងនៅចុងគម្រោង។'
    },
    {
      question: 'តើ Agile Model ផ្តល់លទ្ធផលដោយរបៀបណា?',
      options: [
        'នៅចុងគម្រោង',
        'ជាផ្នែកៗ (Incremental)',
        'ជាលំដាប់',
        'ដោយគ្មានឯកសារ'
      ],
      correct: 1,
      explanation: 'Agile Model ផ្តល់លទ្ធផលជាផ្នែកៗ (Incremental) បន្ទាប់ពី Sprint នីមួយៗ។'
    },
    {
      question: 'តើគំរូណាមួយតម្រូវឱ្យមានការសហការញឹកញាប់ជាមួយអតិថិជន?',
      options: [
        'Waterfall',
        'Agile',
        'V-Model',
        'Iterative'
      ],
      correct: 1,
      explanation: 'Agile Model តម្រូវឱ្យមានការសហការញឹកញាប់ជាមួយអតិថិជន�।'
    },
    {
      question: 'តើ Waterfall Model ស័ក្តិសមសម្រាប់គម្រោងបែបណា?',
      options: [
        'គម្រោងដែលមានតម្រូវការផ្លាស់ប្តូរ',
        'គម្រោងដែលមានតម្រូវការច្បាស់លាស់',
        'គម្រោងជាវដ្តខ្លីៗ',
        'គម្រោងដែលគ្មានឯកសារ'
      ],
      correct: 1,
      explanation: 'Waterfall Model ស័ក្តិសមសម្រាប់គម្រោងដែលមានតម្រូវការច្បាស់លាស់។'
    },
    {
      question: 'តើគុណសម្បត្តិនៃ Agile គឺជាអ្វី?',
      options: [
        'ផលិតឯកសារលម្អិត',
        'អនុញ្ញាតឱ្យផ្លាស់ប្តូរតម្រូវការបានយ៉ាងងាយស្រួល',
        'មានជំហានជាលំដាប់',
        'ងាយស្រួលគ្រប់គ្រងសម្រាប់គម្រោងធំ'
      ],
      correct: 1,
      explanation: 'Agile Model អនុញ្ញាតឱ្យផ្លាស់ប្តូរតម្រូវការបានយ៉ាងងាយស្រួល។'
    },
    {
      question: 'តើគុណវិបត្តិនៃ Waterfall គឺជាអ្វី?',
      options: [
        'ផ្តល់លទ្ធផលផ្នែកខ្លះឆាប់',
        'ការផ្លាស់ប្តូរតម្រូវការពិបាក',
        'ត្រូវការការសហការញឹកញាប់',
        'ឯកសារមិនលម្អិត'
      ],
      correct: 1,
      explanation: 'Waterfall Model មានភាពមិនបត់បែន ដែលធ្វើឱ្យការផ្លាស់ប្តូរតម្រូវការពិបាក។'
    },
    {
      question: 'តើឧបករណ៍ណាមួយខាងក្រោមប្រើសម្រាប់ Waterfall?',
      options: [
        'Jira',
        'Trello',
        'Microsoft Project',
        'Scrum Boards'
      ],
      correct: 2,
      explanation: 'Microsoft Project ត្រូវបានប្រើសម្រាប់គ្រប់គ្រងគម្រោងក្នុង Waterfall'
    }
  ],
  lab: {
    task: `
បង្កើតផែនទីលំហូរការងារ (Flowchart) ដែលប្រៀបធៀបដំណើរការនៃ Agile និង Waterfall សម្រាប់អភិវឌ្ឍប្រព័ន្ធគ្រប់គ្រងអតិថិជន (CRM)។

**តម្រូវការ:**

1. **ផែនទីលំហូរការងារ:**
   - បង្កើត Flowchart ពីរផ្សេងគ្នា៖ មួយសម្រាប់ Waterfall និងមួយទៀតសម្រាប់ Agile។
   - សម្រាប់ Waterfall បង្ហាញជំហានជាលំដាប់ (ឧទាហរណ៍៖ ការវិភាគតម្រូវការ ការរចនា ការអភិវឌ្ឍ ការសាកល្បង ការដាក់ឱ្យប្រើប្រាស់)។
   - សម្រាប់ Agile បង្ហាញវដ្តខ្លីៗ (Sprints) ដែលរួមបញ្ចូលការសហការជាមួយអតិថិជន និងការកែលម្អបន្តបន្ទាប់។

2. **ឧបករណ៍:**
   - ប្រើឧបករណ៍ដូចជា Microsoft Visio, Lucidchart, ឬ Draw.io ដើម្បីគូស Flowchart។

3. **លទ្ធផល:**
   - បង្ហាញ Flowchart ពីរដែលមានសញ្ញាសម្គាល់ច្បាស់លាស់ (ឧទាហរណ៍៖ ប្រអប់សម្រាប់ជំហាន ព្រួញសម្រាប់លំហូរ)។
   - ពន្យល់ពីភាពខុសគ្នារវាង Flowchart ទាំងពីរនៅក្នុងឯកសារខ្លីមួយ។

**ការណែនាំ:**
   - សាកល្បងគូស Flowchart នៅលើឧបករណ៍អនឡាញ ឬក្រដាស ហើយធ្វើការពិនិត្យឡើងវិញជាមួយក្រុម។
   - ផ្តោតលើភាពខុសគ្នារវាងរចនាសម្ព័ន្ធជាលំដាប់របស់ Waterfall និងវដ្តខ្លីៗរបស់ Agile។
`,
    solution: `
**ផែនទីលំហូរការងារ (Flowchart) សម្រាប់ Waterfall:**

1. **ការវិភាភាគតម្រូវការ** [ប្រអប់រាងចតុកោណ]
   - ប្រមូលតម្រូវការពីអតិថិជន និងនាយកដ្ឋានផ្សេងៗ
   - [ព្រួញទៅជំហានបន្ទាប់]
2. **ការរចនា** [ប្រអប់រាងចតុកោណ]
   - បង្កើតគំនូសតាងប្រព័ន្ធ (ឧទាហរណ៍៖ UML, ERD)
   - [ព្រួញទៅជំហានបន្ទាប់]
3. **ការអភិវឌ្ឍ** [ប្រអប់រាងចតុកោណ]
   - អភិវឌ្ឍប្រព័ន្ធ CRM ទាំងមូល
   - [ព្រួញទៅជំហានបន្ទាប់]
4. **ការសាកល្បង** [ប្រអប់រាងចតុកោណ]
   - ធ្វើតេស្តប្រព័ន្ធ ដើម្បីស្វែងរកកំហុស
   - [ព្រួញទៅជំហានបន្ទាប់]
5. **ការដាក់ឱ្យប្រើប្រាស់** [ប្រអប់រាងចតុកោណ]
   - ដាក់ឱ្យប្រើប្រាស់ប្រព័ន្ធ CRM នៅក្នុងបរិស្ថានផលិតកម្ម

**ផែនទីលំហូរការងារ (Flowchart) សម្រាប់ Agile:**

1. **Sprint Planning** [ប្រអប់រាងចតុកោណ]
   - កំណត់គោលដៅសម្រាប់ Sprint ទី 1 (ឧទាហរណ៍៖ មុខងារគ្រប់គ្រងអតិថិជន)
   - [ព្រួញទៅជំហានបន្ទាប់]
2. **Sprint 1: អភិវឌ្ឍន៍** [ប្រអប់រាងចតុកោណ]
   - អភិវឌ្ឍមុខងារគ្រប់គ្រងអតិថិជន
   - [ព្រួញទៅជំហានបន្ទាប់]
3. **Sprint Review & Feedback** [ប្រអប់រាងចតុកោណ]
   - បង្ហាញមុខងារដល់អតិថិជន និងទទួលមតិយោបល់
   - [ព្រួញទៅជំហានបន្ទាប់]
4. **Sprint 2: អភិវឌ្ឍន៍** [ប្រអប់រាងចតុកោណ]
   - អភិវឌ្ឍមុខងារទូទាត់ ដោយកែសម្រួលតាមមតិយោបល់
   - [ព្រួញទៅជំហានបន្ទាប់]
5. **Sprint Review & Feedback** [ប្រអប់រាងចតុកោណ]
   - បង្ហាញមុខងារទូទាត់ និងទទួលមតិយោបល់
   - [ព្រួញទៅជំហានបន្ទាប់]
6. **ការកែលម្អបន្តបន្ទាប់** [ប្រអប់រាងចតុកោណ]
   - បន្ត Sprints សម្រាប់មុខងារថ្មី និងការកែលម្អ

**ឯកសារពន្យល់:**
- **Waterfall Flowchart** បង្ហាញដំណើរការជាលំដាប់ ដែលជំហាននីមួយៗត្រូវបញ្ចប់ទាំងស្រុងមុននឹងបន្ត។ វាស័ក្តិសមសម្រាប់គម្រោង CRM ដែលមានតម្រូវការច្បាស់លាស់ ដោយផ្តល់ឯកសារលម្អិត ប៉ុន្តែមិនអនុញ្ញាតឱ្យផ្លាស់ប្តូរតម្រូវការនៅពាក់កណ្តាលគម្រោង។
- **Agile Flowchart** បង្ហាញវដ្តខ្លីៗ (Sprints) ដែលរួមបញ្ចូលការសហការជាមួយអតិថិជន និងការកែលម្អបន្តបន្ទាប់។ វាស័ក្តិសមសម្រាប់គម្រោង CRM ដែលតម្រូវការអាចផ្លាស់ប្តូរ ដោយផ្តល់ភាពបត់បែន ប៉ុន្តែអាចមានឯកសារតិចជាង។
`
  }
};

export default MISLesson4_3Content;