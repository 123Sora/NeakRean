import type { LessonContent } from '../../../../types/LessonTypes';

const SEMLesson1_2Content: LessonContent = {
  title: 'តួនាទីរបស់ Software Manager',
  objectives: [
    'យល់ដឹងពីភារកិច្ចនិងទំនួលខុសត្រូវចម្បងរបស់ Software Manager',
    'ស្គាល់ពីជំនាញដែល Software Manager ត្រូវមាន (Hard Skills & Soft Skills)',
    'រៀនពីរបៀបដឹកនាំក្រុម Software Development',
    'យល់ពីរបៀបទំនាក់ទំនងជាមួយអ្នកពាក់ព័ន្ធ (Stakeholders)',
    'អនុវត្តការដោះស្រាយបញ្ហាជាក់ស្តែងក្នុងក្រុម'
  ],
  content: `
# តួនាទីរបស់ Software Manager 💼

---

**Software Manager** គឺជាអ្នកដឹកនាំដែលទទួលខុសត្រូវលើគម្រោងអភិវឌ្ឍន៍ Software ទាំងមូល។ តួនាទីរបស់ពួកគេគឺមិនត្រឹមតែគ្រប់គ្រងការងារនោះទេ ថែមទាំងគ្រប់គ្រងមនុស្ស ហានិភ័យ និងទំនាក់ទំនងផងដែរ។ ពួកគេដើរតួនាទីជាស្ពានរវាងក្រុមអភិវឌ្ឍន៍និងថ្នាក់លើឬអតិថិជន។

---

## 1. ភារកិច្ចនិងទំនួលខុសត្រូវ

- **ការរៀបចំផែនការ (Planning):** កំណត់គោលដៅ, ពេលវេលា, ថវិកា និងធនធានចាំបាច់សម្រាប់គម្រោង។
- **ការគ្រប់គ្រងធនធាន (Resource Management):** បែងចែកបុគ្គលិក, ឧបករណ៍, និងថវិកាឱ្យមានប្រសិទ្ធភាព។
- **ការគ្រប់គ្រងក្រុម (Team Management):** ជ្រើសរើស, បង្វឹក, លើកទឹកចិត្ត, និងវាយតម្លៃសមត្ថភាពក្រុម។
- **ការគ្រប់គ្រងគុណភាព (Quality Management):** ត្រួតពិនិត្យដំណើរការអភិវឌ្ឍន៍ដើម្បីធានាថា Software មានគុណភាពខ្ពស់។
- **ការគ្រប់គ្រងហានិភ័យ (Risk Management):** កំណត់, វិភាគ, និងរៀបចំផែនការដើម្បីដោះស្រាយហានិភ័យដែលអាចកើតឡើង។
- **ការទំនាក់ទំនង (Communication):** ធានាឱ្យមានការប្រាស្រ័យទាក់ទងល្អរវាងក្រុមការងារ, ថ្នាក់លើ, និងអតិថិជន។

---

## 2. ជំនាញសំខាន់ៗរបស់ Software Manager

Software Manager ជោគជ័យត្រូវមានជំនាញចម្រុះ៖

- **Hard Skills (ជំនាញបច្ចេកទេស):**
  - **ចំណេះដឹងពី SDLC:** ត្រូវយល់ដឹងពីគ្រប់ដំណាក់កាលនៃការអភិវឌ្ឍន៍ Software ។
  - **ចំណេះដឹងពី Project Management:** ស្គាល់ពីវិធីសាស្ត្រគ្រប់គ្រងដូចជា Agile, Scrum, Waterfall ។
  - **ចំណេះដឹងបច្ចេកទេស:** ត្រូវយល់ដឹងពីភាសាសរសេរកូដ, Database, និង Architecture នៃ Software ។

- **Soft Skills (ជំនាញទន់):**
  - **ភាពជាអ្នកដឹកនាំ (Leadership):** អាចដឹកនាំនិងជំរុញទឹកចិត្តក្រុម។
  - **ការទំនាក់ទំនង (Communication):** អាចពន្យល់ពីគំនិតបច្ចេកទេសទៅអ្នកមិនមែនបច្ចេកទេសបាន។
  - **ការដោះស្រាយបញ្ហា (Problem-Solving):** អាចដោះស្រាយបញ្ហាដែលកើតឡើងក្នុងគម្រោង។
  - **ការចរចា (Negotiation):** អាចចរចាជាមួយ Stakeholders លើតម្រូវការនិងពេលវេលា។

---

## 3. ឧទាហរណ៍ជាក់ស្តែង

**សេណារីយ៉ូ:** ក្រុមរបស់អ្នកមានជម្លោះផ្ទៃក្នុង។ វិស្វករពីរនាក់មិនចុះសម្រុងគ្នា។

- **តួនាទី Software Manager:** ដោះស្រាយជម្លោះ
- **របៀបដោះស្រាយ:**
  - ជួបជាមួយអ្នកទាំងពីរដោយឡែកពីគ្នាដើម្បីស្តាប់បញ្ហា។
  - ជួបជាមួយអ្នកទាំងពីររួមគ្នាដើម្បីសម្របសម្រួលនិងស្វែងរកដំណោះស្រាយ។
  - ផ្តោតលើគោលដៅរួមរបស់គម្រោងដើម្បីឱ្យពួកគេយល់ពីសារៈសំខាន់នៃការធ្វើការរួមគ្នា។
`,
  examples: [
    `### ឧទាហរណ៍: ការគ្រប់គ្រងហានិភ័យ

**បញ្ហា:** ក្រុមហ៊ុនរបស់អ្នកកំពុងអភិវឌ្ឍ Software ថ្មីមួយ ប៉ុន្តែក្រុមការងារមានចំនួនតិចពេក។

1. **ការកំណត់ហានិភ័យ:** កង្វះបុគ្គលិកអាចធ្វើឱ្យគម្រោងពន្យារពេលនិងមានគុណភាពទាប។
2. **ការរៀបចំផែនការដោះស្រាយ (Mitigation Plan):**
   - **រយៈពេលខ្លី:** បែងចែកការងារឱ្យស្មើគ្នានិងបណ្តុះបណ្តាលបុគ្គលិកដែលមានស្រាប់។
   - **រយៈពេលវែង:** ជួលបុគ្គលិកថ្មីបន្ថែមឬប្រើប្រាស់ Freelancers ។
3. **ការតាមដាន:** Software Manager ត្រូវតាមដានវឌ្ឍនភាពការងារនិងធានាថាផែនការដោះស្រាយត្រូវបានអនុវត្តន៍។
`
  ],
  quiz: [
    {
      question: 'តើ Software Manager ទទួលខុសត្រូវលើអ្វីខ្លះ?',
      options: ['ការងារតែបច្ចេកទេស', 'ការងារតែផ្នែកលក់', 'ការងាររៀបចំផែនការ, គ្រប់គ្រងធនធាន, និងក្រុម', 'ការងារតែផ្នែកទីផ្សារ'],
      correct: 2,
      explanation: 'Software Manager គ្រប់គ្រងលើការរៀបចំផែនការ, ធនធាន, និងក្រុមដើម្បីឱ្យគម្រោងជោគជ័យ។'
    },
    {
      question: 'តើជំនាញ "Soft Skills" មួយណាដែលសំខាន់បំផុតសម្រាប់ Software Manager?',
      options: ['ការសរសេរកូដ', 'ការគ្រប់គ្រងហិរញ្ញវត្ថុ', 'ភាពជាអ្នកដឹកនាំនិងការទំនាក់ទំនង', 'ការរចនាក្រាហ្វិក'],
      correct: 2,
      explanation: 'ភាពជាអ្នកដឹកនាំនិងការទំនាក់ទំនងល្អគឺចាំបាច់ដើម្បីដឹកនាំក្រុមឱ្យមានប្រសិទ្ធភាព។'
    },
    {
      question: 'ហេតុអ្វីបានជា Software Manager ត្រូវយល់ដឹងពី SDLC?',
      options: ['ដើម្បីធ្វើការតែលើ SDLC', 'ដើម្បីយល់ពីដំណើរការ Software ទាំងមូល', 'ដើម្បីធ្វើការតែលើការសរសេរកូដ', 'មិនចាំបាច់ទេ'],
      correct: 1,
      explanation: 'ការយល់ដឹងពី SDLC ជួយ Software Manager គ្រប់គ្រងគ្រប់ដំណាក់កាលនៃគម្រោង។'
    },
    {
      question: 'តើការគ្រប់គ្រងហានិភ័យនៅក្នុង SEM មានគោលបំណងអ្វី?',
      options: ['ដើម្បីជៀសវាងហានិភ័យ', 'ដើម្បីកំណត់, វិភាគ, និងដោះស្រាយបញ្ហាដែលអាចកើតឡើង', 'ដើម្បីបង្កើតហានិភ័យ', 'ដើម្បីគ្រប់គ្រងតែហានិភ័យហិរញ្ញវត្ថុ'],
      correct: 1,
      explanation: 'ការគ្រប់គ្រងហានិភ័យគឺដើម្បីកំណត់, វិភាគ, និងដោះស្រាយបញ្ហាដែលអាចកើតឡើង។'
    },
    {
      question: 'តើអ្វីជាតួនាទីរបស់ Software Manager នៅក្នុងការទំនាក់ទំនងជាមួយ Stakeholders?',
      options: ['មិនចាំបាច់ទំនាក់ទំនងទេ', 'ដើម្បីប្រាប់ពួកគេពីបញ្ហាទាំងអស់', 'ដើម្បីធានាថាព័ត៌មានត្រូវបានចែករំលែកយ៉ាងច្បាស់', 'ដើម្បីលាក់ព័ត៌មាន'],
      correct: 2,
      explanation: 'Software Manager ត្រូវតែធានាថាព័ត៌មានត្រូវបានចែករំលែកយ៉ាងត្រឹមត្រូវនិងទាន់ពេលវេលា។'
    },
    {
      question: 'តើការបែងចែកធនធានមានន័យដូចម្តេច?',
      options: ['ការលុបចោលធនធាន', 'ការគ្រប់គ្រងមនុស្សនិងថវិកា', 'ការមិនប្រើប្រាស់ធនធាន', 'ការគ្រប់គ្រងកូដ'],
      correct: 1,
      explanation: 'ការបែងចែកធនធានគឺការគ្រប់គ្រងមនុស្ស, ឧបករណ៍, និងថវិកាឱ្យបានត្រឹមត្រូវ។'
    },
    {
      question: 'តើអ្វីជាអត្ថប្រយោជន៍នៃការដោះស្រាយជម្លោះក្នុងក្រុម?',
      options: ['គ្មានអត្ថប្រយោជន៍', 'ធ្វើឱ្យក្រុមបែកបាក់', 'ជួយឱ្យក្រុមធ្វើការរួមគ្នាប្រកបដោយប្រសិទ្ធភាព', 'បង្កើនហានិភ័យ'],
      correct: 2,
      explanation: 'ការដោះស្រាយជម្លោះជួយឱ្យក្រុមអាចផ្តោតលើការងារនិងធ្វើការរួមគ្នាបានល្អ។'
    }
  ],
  lab: {
    task: `
**សេណារីយ៉ូ:** អ្នកជា Software Manager សម្រាប់គម្រោង Website E-commerce ថ្មីមួយ។ អតិថិជនទាមទារឱ្យគម្រោងបញ្ចប់ក្នុងរយៈពេលខ្លីដែលមិនអាចទៅរួច។

**តម្រូវការ:**
1.  កំណត់ហានិភ័យចម្បងដែលកើតឡើងពីការទាមទារនេះ។
2.  រៀបចំផែនការប្រាស្រ័យទាក់ទងជាមួយអតិថិជនដើម្បីចរចាលើពេលវេលា។
3.  គិតអំពីដំណោះស្រាយដែលអាចសម្របសម្រួលបាន។
    `,
    solution: `
**ការគ្រប់គ្រងការរំពឹងទុករបស់អតិថិជន**

**១. ហានិភ័យចម្បង:**
   - គម្រោងអាចនឹងបញ្ចប់មិនទាន់ពេល។
   - គុណភាព Software នឹងចុះខ្សោយដោយសារក្រុមត្រូវធ្វើការក្រោមសម្ពាធ។
   - បុគ្គលិកអាចនឹងអស់កម្លាំងឬបោះបង់ការងារ។

**២. ផែនការទំនាក់ទំនង:**
   - រៀបចំការប្រជុំជាមួយអតិថិជនដើម្បីបង្ហាញពីផែនការជាក់ស្តែង។
   - ពន្យល់ពីហានិភ័យនៃការបញ្ចប់គម្រោងលឿនពេក (បញ្ហាគុណភាព, បញ្ហាថវិកា)។
   - ផ្តល់ជម្រើសផ្សេងៗឱ្យអតិថិជន (ឧទាហរណ៍: បំបែកគម្រោងជាដំណាក់កាលតូចៗ)។

**៣. ដំណោះស្រាយសម្របសម្រួល:**
   - **ដំណោះស្រាយទី ១:** ផ្តោតលើមុខងារសំខាន់ៗដំបូង (Minimum Viable Product - MVP) ដើម្បីឱ្យ Website អាចដំណើរការបានទាន់ពេល។
   - **ដំណោះស្រាយទី ២:** បន្ថែមបុគ្គលិកបន្ថែមដើម្បីបង្កើនល្បឿន (ប្រសិនបើថវិកាអនុញ្ញាត)។
   - **ដំណោះស្រាយទី ៣:** ធ្វើការចរចាពេលវេលាបញ្ចប់គម្រោងថ្មីដែលសមស្របជាងមុន។
`
  }
};

export default SEMLesson1_2Content;