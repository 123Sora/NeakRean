import type { LessonContent } from '../../../../types/LessonTypes';

const SEMLesson1_1Content: LessonContent = {
  title: 'ណែនាំអំពី Software Engineering Management',
  objectives: [
    'យល់ដឹងពីនិយមន័យ និងគោលគំនិតគ្រឹះនៃ SEM',
    'ស្គាល់ពីតួនាទី និងទំនួលខុសត្រូវរបស់ Software Manager',
    'រៀនពីទំនាក់ទំនងរវាង SEM និង Software Development',
    'យល់ពីបញ្ហាប្រឈមសំខាន់ៗក្នុងការគ្រប់គ្រងគម្រោង Software',
    'អនុវត្តន៍ការវិភាគតម្រូវការសម្រាប់គម្រោង Software សាមញ្ញ'
  ],
  content: `
# ណែនាំអំពី Software Engineering Management 💻

---

**Software Engineering Management (SEM)** គឺជាវិជ្ជាជីវៈមួយដែលអនុវត្តគោលការណ៍គ្រប់គ្រងទៅលើដំណើរការអភិវឌ្ឍន៍ Software ។ វាផ្តោតលើការរៀបចំផែនការ ការអនុវត្តន៍ ការត្រួតពិនិត្យ និងការគ្រប់គ្រងធនធាន (មនុស្ស ថវិកា ពេលវេលា) ដើម្បីធានាថាគម្រោង Software ត្រូវបានបញ្ចប់ទាន់ពេល ក្នុងថវិកាដែលបានកំណត់ និងមានគុណភាពល្អ។

---

## 1. តើ SEM គឺជាអ្វី?

SEM មិនមែនគ្រាន់តែជាការសរសេរកូដនោះទេ។ វាជាការគ្រប់គ្រងដំណើរការទាំងមូលនៃ **Software Development Life Cycle (SDLC)** ។ គោលដៅចម្បងគឺដើម្បីសម្របសម្រួលក្រុមការងារ គ្រប់គ្រងហានិភ័យ និងធានាថាលទ្ធផលចុងក្រោយបំពេញតាមតម្រូវការរបស់អតិថិជន។

**មុខងារសំខាន់ៗនៃ SEM:**
- **Project Planning:** រៀបចំផែនការគម្រោង, កំណត់ពេលវេលា, និងបែងចែកធនធាន។
- **Team Leadership:** ដឹកនាំ, ជំរុញទឹកចិត្ត, និងដោះស្រាយបញ្ហាជាមួយក្រុម។
- **Risk Management:** កំណត់, វិភាគ, និងគ្រប់គ្រងហានិភ័យ។
- **Quality Assurance:** ធានាគុណភាព Software តាមរយៈការធ្វើតេស្តនិងការត្រួតពិនិត្យ។
- **Stakeholder Management:** ទំនាក់ទំនងជាមួយអ្នកពាក់ព័ន្ធទាំងអស់ (អតិថិជន, វិនិយោគិន)។

---

## 2. តួនាទីរបស់ Software Manager

Software Manager ដើរតួនាទីជាអ្នកដឹកនាំនិងជាអ្នកសម្របសម្រួល។ ពួកគេត្រូវមានជំនាញទាំងបច្ចេកទេស (Technical Skills) និងជំនាញគ្រប់គ្រង (Management Skills)។

- **អ្នកគ្រប់គ្រងបច្ចេកទេស:** ត្រូវយល់ពីបច្ចេកវិទ្យាដែលប្រើប្រាស់និងជួយដោះស្រាយបញ្ហាបច្ចេកទេស។
- **អ្នកគ្រប់គ្រងមនុស្ស:** ត្រូវជួយអភិវឌ្ឍន៍សមត្ថភាពក្រុម, ដោះស្រាយជម្លោះ និងផ្តល់ការវាយតម្លៃ។
- **អ្នកគ្រប់គ្រងគម្រោង:** ត្រូវធានាថាគម្រោងដើរទៅមុខតាមផែនការ។

---

## 3. បញ្ហាប្រឈមក្នុងការគ្រប់គ្រងគម្រោង Software

ការគ្រប់គ្រងគម្រោង Software មានភាពស្មុគស្មាញដោយសារតែ៖
- **តម្រូវការផ្លាស់ប្តូរ:** តម្រូវការរបស់អតិថិជនអាចផ្លាស់ប្តូរនៅពាក់កណ្តាលគម្រោង។
- **ការប៉ាន់ស្មានខុស:** ការប៉ាន់ស្មានពេលវេលានិងថវិកាអាចខុសពីការពិត។
- **បញ្ហាក្នុងក្រុម:** ការប្រាស្រ័យទាក់ទងមិនល្អឬជម្លោះក្នុងក្រុម។
- **បញ្ហាបច្ចេកទេសដែលមិនបានរំពឹងទុក:** កំហុសក្នុងកូដឬបញ្ហាជាមួយបច្ចេកវិទ្យា។

---

## 4. ឧទាហរណ៍ជាក់ស្តែង

ឧទាហរណ៍នៃការអនុវត្តន៍ SEM គឺការប្រើប្រាស់ **Scrum Methodology** នៅក្នុងគម្រោងអភិវឌ្ឍន៍ Website។

**របៀបដំណើរការ:**
1. **Planning:** ក្រុមការងារបំបែកគម្រោងជាផ្នែកតូចៗ (Sprints)។
2. **Implementation:** ក្រុមធ្វើការលើផ្នែកនីមួយៗក្នុងរយៈពេលកំណត់ (ឧទាហរណ៍: ២ សប្តាហ៍)។
3. **Daily Stand-ups:** ក្រុមជួបគ្នាជារៀងរាល់ថ្ងៃរយៈពេលខ្លីដើម្បីពិភាក្សាការងារ។
4. **Review:** នៅចុងបញ្ចប់នៃ Sprint នីមួយៗ ក្រុមបង្ហាញលទ្ធផលដល់អតិថិជនដើម្បីប្រមូលមតិកែលម្អ។
`,
  examples: [
    `### ឧទាហរណ៍: ការកំណត់តម្រូវការសម្រាប់ Mobile App

ពិពណ៌នាពីរបៀបដែល Software Manager កំណត់តម្រូវការសម្រាប់កម្មវិធី Mobile App មួយ។

1. **ការប្រជុំជាមួយអតិថិជន:** ជួបជាមួយអតិថិជនដើម្បីយល់ពីគោលបំណងរបស់ App (ឧទាហរណ៍: App សម្រាប់កុម្ម៉ង់អាហារ)។
2. **ការប្រមូលតម្រូវការ:** ប្រើបច្ចេកទេសដូចជាការសម្ភាសន៍, ការសង្កេត, ឬការស្រាវជ្រាវដើម្បីកំណត់លក្ខណៈពិសេសរបស់ App (ឧទាហរណ៍: ការចុះឈ្មោះ, ការស្វែងរកមុខម្ហូប, ការទូទាត់ប្រាក់)។
3. **ការចងក្រងឯកសារ:** រៀបចំឯកសារតម្រូវការ (Software Requirements Specification) ដែលមានលក្ខណៈបច្ចេកទេស។
4. **ការត្រួតពិនិត្យ:** ផ្តល់ឯកសារនេះទៅក្រុមអភិវឌ្ឍន៍និងអ្នកពាក់ព័ន្ធផ្សេងទៀតដើម្បីធានាថាគ្រប់គ្នាមានការយល់ដឹងដូចគ្នា។
`
  ],
  quiz: [
    {
      question: 'តើអ្វីជាមុខងារមួយក្នុងចំណោមមុខងារសំខាន់ៗរបស់ SEM?',
      options: ['ការរៀបចំព្រឹត្តិការណ៍', 'ការរៀបចំផែនការគម្រោង', 'ការលក់ផលិតផល', 'ការគ្រប់គ្រងហិរញ្ញវត្ថុក្រុមហ៊ុន'],
      correct: 1,
      explanation: 'ការរៀបចំផែនការគម្រោងគឺជាផ្នែកសំខាន់នៃ Software Engineering Management។'
    },
    {
      question: 'តើ Software Manager ត្រូវមានជំនាញអ្វីខ្លះ?',
      options: ['ជំនាញតែបច្ចេកទេស', 'ជំនាញតែគ្រប់គ្រង', 'ទាំងជំនាញបច្ចេកទេស និងជំនាញគ្រប់គ្រង', 'ជំនាញលក់ដូរ'],
      correct: 2,
      explanation: 'Software Manager ត្រូវការជំនាញទាំងពីរដើម្បីដឹកនាំក្រុមឱ្យមានប្រសិទ្ធភាព។'
    },
    {
      question: 'តើ SDLC តំណាងឱ្យអ្វី?',
      options: ['Software Design Life Cycle', 'System Development Learning Cycle', 'Software Development Life Cycle', 'System Design Learning Course'],
      correct: 2,
      explanation: 'SDLC តំណាងឱ្យ Software Development Life Cycle ដែលជាវដ្តជីវិតនៃការអភិវឌ្ឍន៍ Software។'
    },
    {
      question: 'តើអ្វីជាបញ្ហាប្រឈមចម្បងមួយក្នុងការគ្រប់គ្រងគម្រោង Software?',
      options: ['ការចំណាយទាប', 'ការផ្លាស់ប្តូរតម្រូវការ', 'ការប្រើប្រាស់ឧបករណ៍ងាយស្រួល', 'ក្រុមការងារមានបទពិសោធន៍'],
      correct: 1,
      explanation: 'តម្រូវការដែលផ្លាស់ប្តូរគឺជាបញ្ហាប្រឈមធំមួយនៅក្នុងគម្រោង Software។'
    },
    {
      question: 'តើការគ្រប់គ្រងហានិភ័យនៅក្នុង SEM គឺដើម្បីអ្វី?',
      options: ['ដើម្បីការពារកំហុសកូដ', 'ដើម្បីកំណត់ និងដោះស្រាយហានិភ័យមុនពេលវាកើតឡើង', 'ដើម្បីកំណត់ពេលវេលា', 'ដើម្បីជ្រើសរើសបុគ្គលិក'],
      correct: 1,
      explanation: 'ការគ្រប់គ្រងហានិភ័យគឺដើម្បីកំណត់, វិភាគ, និងគ្រប់គ្រងបញ្ហាដែលអាចកើតមាន។'
    },
    {
      question: 'តើអ្វីទៅដែលហៅថា "Stakeholder"?',
      options: ['អ្នកសរសេរកូដ', 'អ្នកប្រើប្រាស់ចុងក្រោយ', 'អ្នកគ្រប់គ្រង', 'អ្នកពាក់ព័ន្ធទាំងអស់ (អតិថិជន, វិនិយោគិន, ក្រុមការងារ)'],
      correct: 3,
      explanation: 'Stakeholder សំដៅលើអ្នកពាក់ព័ន្ធទាំងអស់នៅក្នុងគម្រោង។'
    },
    {
      question: 'តើការប្រើប្រាស់ Daily Stand-ups ក្នុង Scrum មានគោលបំណងអ្វី?',
      options: ['ដើម្បីប្រជុំយូរ', 'ដើម្បីដោះស្រាយបញ្ហាបច្ចេកទេសទាំងអស់', 'ដើម្បីដឹងពីវឌ្ឍនភាពការងារនិងបញ្ហាប្រឈមប្រចាំថ្ងៃ', 'ដើម្បីលុបកូដ'],
      correct: 2,
      explanation: 'Daily Stand-ups គឺជាការប្រជុំខ្លីប្រចាំថ្ងៃដើម្បីពិនិត្យវឌ្ឍនភាពនិងបញ្ហា។'
    },
    {
      question: 'តើអ្វីជាលទ្ធផលចុងក្រោយនៃ Software Development?',
      options: ['ឯកសារ', 'ក្រុមការងារ', 'ផលិតផល Software ដែលមានគុណភាព', 'ផែនការគម្រោង'],
      correct: 2,
      explanation: 'គោលបំណងចុងក្រោយគឺដើម្បីបង្កើត Software ដែលមានគុណភាព។'
    }
  ],
  lab: {
    task: `
**សេណារីយ៉ូ:** អ្នកជា Software Manager សម្រាប់គម្រោងបង្កើត Mobile App សម្រាប់ហាងលក់កាហ្វេ។

**តម្រូវការ:**
1.  កំណត់មុខងារសំខាន់ៗយ៉ាងតិច ៤ ដែល App នេះគួរតែមាន។
2.  ពិពណ៌នាពីរបៀបដែលអ្នកនឹងធ្វើការជាមួយក្រុមរបស់អ្នកដើម្បីធានាថាមុខងារទាំងនេះត្រូវបានបង្កើតឡើងដោយជោគជ័យ។
3.  កំណត់ហានិភ័យយ៉ាងតិច ២ សម្រាប់គម្រោងនេះ។
    `,
    solution: `
**គម្រោង Mobile App សម្រាប់ហាងកាហ្វេ**

**១. មុខងារសំខាន់ៗ:**
    - **ការបញ្ជាទិញតាម Mobile:** អតិថិជនអាចកុម្ម៉ង់កាហ្វេពីក្នុង App បាន។
    - **ការទូទាត់តាម Digital:** ភ្ជាប់ជាមួយប្រព័ន្ធទូទាត់ដូចជា ABA ឬ Visa។
    - **ប្រព័ន្ធ Loyalty:** ផ្តល់ពិន្ទុសម្រាប់អតិថិជនដែលទិញញឹកញាប់។
    - **ការតាមដានការកុម្ម៉ង់:** អតិថិជនអាចតាមដានស្ថានភាពនៃការកុម្ម៉ង់របស់ពួកគេ។

**២. របៀបធ្វើការជាមួយក្រុម:**
   - ខ្ញុំនឹងប្រើ **Agile Methodology** ដូចជា **Scrum**។
   - ខ្ញុំនឹងបំបែកការងារជា Sprints រយៈពេល ២ សប្តាហ៍។
   - ខ្ញុំនឹងមាន **Daily Stand-up** ជាមួយក្រុមដើម្បីដឹងពីវឌ្ឍនភាព។
   - ខ្ញុំនឹងរៀបចំ **Sprint Review** នៅចុងបញ្ចប់នៃ Sprint នីមួយៗដើម្បីបង្ហាញលទ្ធផល។

**៣. ហានិភ័យដែលត្រូវកំណត់:**
   - **ហានិភ័យទី ១: ការផ្លាស់ប្តូរតម្រូវការ។** អតិថិជនអាចចង់បន្ថែមមុខងារថ្មីនៅពេលក្រោយ។
   - **ការដោះស្រាយ:** ប្រើ Agile វិញ ដើម្បីអនុញ្ញាតឱ្យមានការផ្លាស់ប្តូរនិងពិភាក្សាជាមួយអតិថិជននៅគ្រប់ជំហាន។
   - **ហានិភ័យទី ២: ការប៉ាន់ស្មានពេលវេលាខុស។** ការងារអាចចំណាយពេលយូរជាងការរំពឹងទុក។
   - **ការដោះស្រាយ:** ប្រើបច្ចេកទេសប៉ាន់ស្មានដូចជា **Planning Poker** និងធ្វើការវាយតម្លៃជាប្រចាំ។
`
  }
};

export default SEMLesson1_1Content;