import type { Lesson } from '../../../../types/LessonTypes';

const MISLesson4_1Content: Lesson = {
  id: 'mis-lesson-4-1',
  title: 'ណែនាំអំពី វដ្តជីវិតនៃការអភិវឌ្ឍប្រព័ន្ធ (SDLC)',
  objectives: [
    'យល់ដឹងអំពីអ្វីទៅជា វដ្តជីវិតនៃការអភិវឌ្ឍប្រព័ន្ធ (SDLC) និងសារៈសំខាន់របស់វា',
    'ស្វែងយល់ពីគោលបំណងនៃ SDLC ក្នុងការអភិវឌ្ឍប្រព័ន្ធព័ត៌មាន',
    'ស្គាល់គំរូ SDLC ផ្សេងៗ ដូចជា Waterfall និង Agile',
    'យល់ពីអត្ថប្រយោជន៍នៃការប្រើប្រាស់ SDLC ក្នុងគម្រោងអាជីវកម្ម',
    'ប្រៀបធៀប SDLC ជាមួយវិធីសាស្ត្រអភិវឌ្ឍន៍ផ្សេងទៀត',
  ],
  content: `
# ណែនាំអំពី វដ្តជីវិតនៃការអភិវឌ្ឍប្រព័ន្ធ (SDLC) 🌐🔄

---

**វដ្តជីវិតនៃការអភិវឌ្ឍប្រព័ន្ធ (System Development Life Cycle - SDLC)** គឺជាក្របខណ្ឌដែលប្រើសម្រាប់រៀបចំផែនការ រចនា អភិវឌ្ឍ សាកល្បង និងដាក់ឱ្យប្រើប្រាស់ប្រព័ន្ធព័ត៌មាន។ SDLC ជួយធានាថាប្រព័ន្ធដែលបង្កើតឡើងមានគុណភាពខ្ពស់ បំពេញតម្រូវការអ្នកប្រើប្រាស់ និងអាចគ្រប់គ្រងបានក្នុងរយៈពេលវែង។

---

## 1. អ្វីទៅជា SDLC?

SDLC គឺជាដំណើរការដែលមានជំហានជាបន្តបន្ទាប់ ដើម្បីអភិវឌ្ឍប្រព័ន្ធព័ត៌មាន។ វាផ្តល់នូវរចនាសម្ព័ន្ធដែលជួយអ្នកអភិវឌ្ឍន៍ និងអ្នកគ្រប់គ្រងគម្រោងធ្វើការងារប្រកបដោយប្រសិទ្ធភាព។

លក្ខណៈពិសេសនៃ SDLC៖
- **រចនាសម្ព័ន្ធ:** ផ្តល់ជំហានច្បាស់លាស់សម្រាប់ការអភិវឌ្ឍ។
- **គុណភាព:** ធានាថាប្រព័ន្ធមានគុណភាព និងគ្មានកំហុស។
- **ការគ្រប់គ្រងគម្រោង:** ជួយគ្រប់គ្រងធនធាន និងកាលវិភាគ។
- **ភាពអាចបត់បែន:** អនុញ្ញាតឱ្យសម្របខ្លួនទៅនឹងតម្រូវការផ្លាស់ប្តូរ។
- **ការថែទាំ:** គាំទ្រការធ្វើបច្ចុប្បន្នភាពបន្ទាប់ពីការដាក់ឱ្យប្រើប្រាស់។

ឧទាហរណ៍៖ ក្រុមហ៊ុនប្រើ SDLC ដើម្បីបង្កើតប្រព័ន្ធគ្រប់គ្រងអតិថិជន (CRM) ដែលធានាថាប្រព័ន្ធនោះបំពេញតម្រូវការអាជីវកម្ម។

---

## 2. គោលបំណងនៃ SDLC

SDLC មានគោលបំណងដូចខាងក្រោម៖
- **រៀបចំផែនការ:** កំណត់គោលដៅ និងធនធានសម្រាប់គម្រោង។
- **ការអភិវឌ្ឍប្រកបដោយប្រសិទ្ធភាព:** កាត់បន្ថយហានិភ័យ និងកំហុស។
- **ការបំពេញតម្រូវការ:** ធានាថាប្រព័ន្ធឆ្លើយតបនឹងតម្រូវការអ្នកប្រើប្រាស់។
- **ការគ្រប់គ្រងថវិកា:** គ្រប់គ្រងការចំណាយឱ្យស្ថិតក្នុងកម្រិតសមស្រប។
- **ការថែទាំរយៈពេលវែង:** ធ្វើឱ្យប្រព័ន្ធអាចប្រើប្រាស់បានយូរអង្វែង។

---

## 3. គំរូ SDLC ផ្សេងៗ

គំរូ SDLC ទូទៅរួមមាន៖
1. **Waterfall Model:** ដំណើរការជាលំដាប់ ដែលជំហាននីមួយៗត្រូវបញ្ចប់មុនពេលចាប់ផ្តើមជំហានបន្ទាប់។
2. **Agile Model:** ផ្តោតលើការអភិវឌ្ឍជាវដ្តៗ និងការសហការជាមួយអតិថិជន។
3. **Spiral Model:** រួមបញ្ចូលការវិភាគហានិភ័យ និងការអភិវឌ្ឍជាវដ្ត។
4. **V-Model:** ផ្តោតលើការសាកល្បងនៅគ្រប់ជំហាននៃការអភិវឌ្ឍ។
5. **Iterative Model:** អភិវឌ្ឍប្រព័ន្ធជាផ្នែកៗ និងកែលម្អបន្តបន្ទាប់។

---

## 4. អត្ថប្រយោជន៍នៃ SDLC

ការប្រើប្រាស់ SDLC ផ្តល់នូវអត្ថប្រយោជន៍ដូចជា៖
- **ភាពច្បាស់លាស់:** ផ្តល់ជំហានច្បាស់លាស់សម្រាប់ការអភិវឌ្ឍ។
- **ការគ្រប់គ្រងហានិភ័យ:** កាត់បន្ថយហានិភ័យនៃការបរាជ័យគម្រោង។
- **គុណភាពខ្ពស់:** ធានាថាប្រព័ន្ធមានគុណភាព និងគ្មានកំហុស។
- **ការសហការ:** អនុញ្ញាតឱ្យក្រុមផ្សេងៗសហការគ្នា។
- **ភាពអាចធ្វើមាត្រដ្ឋាន:** អនុញ្ញាតឱ្យប្រព័ន្ធអាចពង្រីកបាន។

---

## 5. ការប្រៀបធៀប SDLC ជាមួយវិធីសាស្ត្រផ្សេងទៀត

| វិធីសាស្ត្រ           | គោលបំណង                           | គុណសម្បត្តិ                        | គុណវិបត្តិ                       |
| :--------------------- | :---------------------------------- | :---------------------------------- | :-------------------------------- |
| **SDLC**               | អភិវឌ្ឍប្រព័ន្ធព័ត៌មាន           | ច្បាស់លាស់ និងមានរចនាសម្ព័ន្ធ   | អាចយឺតយ៉ាវសម្រាប់គម្រោងសាមញ្ញ |
| **Ad-Hoc Development** | អភិវឌ្ឍដោយគ្មានផែនការច្បាស់លាស់ | លឿនសម្រាប់គម្រោងតូច            | គ្មានរចនាសម្ព័ន្ធ និងហានិភ័យខ្ពស់ |
| **Prototyping**        | បង្កើតគំរូសម្រាប់សាកល្បង       | ងាយស្រួលកែលម្អ                   | មិនស័ក្តិសមសម្រាប់គម្រោងធំ   |

---

## 6. ហេតុអ្វីត្រូវរៀន SDLC?

SDLC គឺសំខាន់សម្រាប់៖
- **ការអភិវឌ្ឍប្រកបដោយប្រសិទ្ធភាព:** ជួយគ្រប់គ្រងគម្រោងឱ្យជោគជ័យ។
- **ការបំពេញតម្រូវការ:** ធានាថាប្រព័ន្ធឆ្លើយតបនឹងតម្រូវការអ្នកប្រើប្រាស់។
- **ការគ្រប់គ្រងហានិភ័យ:** កាត់បន្ថយហានិភ័យនៃការបរាជ័យ។
- **តម្រូវការទីផ្សារ:** អ្នកជំនាញ SDLC មានតម្រូវការខ្ពស់។
- **ភាពអាចធ្វើមាត្រដ្ឋាន:** ជួយបង្កើតប្រព័ន្ធដែលអាចពង្រីកបាន។
`,
  examples: [
    `<h3>ឧទាហរណ៍៖ ការប្រើ SDLC ក្នុងការអភិវឌ្ឍប្រព័ន្ធ CRM</h3>
<p>ក្រុមហ៊ុនលក់រាយមួយប្រើ SDLC ដើម្បីបង្កើតប្រព័ន្ធ CRM។ ដំណើរការនេះចាប់ផ្តើមដោយការប្រមូលតម្រូវការពីអតិថិជន បន្ទាប់មករចនាប្រព័ន្ធ អភិវឌ្ឍ សាកល្បង និងដាក់ឱ្យប្រើប្រាស់។</p>
<hr>
<h3>ឧទាហរណ៍៖ ការប្រើ Agile Model ក្នុងគម្រោង Mobile App</h3>
<p>ក្រុមអភិវឌ្ឍន៍ប្រើ Agile Model ដើម្បីបង្កើត Mobile App ដោយធ្វើការជាវដ្តខ្លីៗ (Sprints) និងសហការជាមួយអតិថិជនដើម្បីកែលម្អបន្តបន្ទាប់។</p>
`
  ],
  quiz: [
    {
      question: 'តើ SDLC គឺជាអ្វី?',
      options: [
        'ភាសាសរសេរកម្មវិធី',
        'ក្របខណ្ឌសម្រាប់អភិវឌ្ឍប្រព័ន្ធព័ត៌មាន',
        'ឧបករណ៍គ្រប់គ្រងផ្នែករឹង',
        'ប្រព័ន្ធបណ្តាញសង្គម'
      ],
      correct: 1,
      explanation: 'SDLC គឺជាក្របខណ្ឌសម្រាប់អភិវឌ្ឍប្រព័ន្ធព័ត៌មាន។'
    },
    {
      question: 'តើគោលបំណងសំខាន់នៃ SDLC គឺជាអ្វី?',
      options: [
        'បង្កើតបណ្តាញអ៊ីនធឺណិត',
        'ធានាគុណភាពប្រព័ន្ធ និងបំពេញតម្រូវការ',
        'គ្រប់គ្រងផ្នែករឹង',
        'រចនា UI'
      ],
      correct: 1,
      explanation: 'SDLC ផ្តោតលើការធានាគុណភាពប្រព័ន្ធ និងបំពេញតម្រូវការអ្នកប្រើប្រាស់។'
    },
    {
      question: 'តើគំរូ SDLC ណាមួយធ្វើការជាលំដាប់?',
      options: [
        'Agile Model',
        'Waterfall Model',
        'Spiral Model',
        'Iterative Model'
      ],
      correct: 1,
      explanation: 'Waterfall Model ធ្វើការជាលំដាប់ ដោយជំហាននីមួយៗត្រូវបញ្ចប់មុនជំហានបន្ទាប់។'
    },
    {
      question: 'តើអ្វីជាអត្ថប្រយោជន៍នៃ SDLC?',
      options: [
        'បង្កើនល្បឿនអ៊ីនធឺណិត',
        'ផ្តល់រចនាសម្ព័ន្ធ និងកាត់បន្ថយហានិភ័យ',
        'គ្រប់គ្រងផ្នែករឹង',
        'បង្កើត UI Components'
      ],
      correct: 1,
      explanation: 'SDLC ផ្តល់រចនាសម្ព័ន្ធ និងកាត់បន្ថយហានិភ័យនៃការបរាជ័យ។'
    },
    {
      question: 'តើគំរូ Agile ផ្តោតលើអ្វី?',
      options: [
        'ការអភិវឌ្ឍជាលំដាប់',
        'ការសហការជាមួយអតិថិជន និងវដ្តខ្លី',
        'ការវិភាគហានិភ័យ',
        'ការសាកល្បងប៉ុណ្ណោះ'
      ],
      correct: 1,
      explanation: 'Agile Model ផ្តោតលើការសហការជាមួយអតិថិជន និងការអភិវឌ្ឍជាវដ្តខ្លី។'
    },
    {
      question: 'តើ SDLC ជួយគ្រប់គ្រងអ្វី?',
      options: [
        'ថវិកា និងកាលវិភាគ',
        'បណ្តាញសង្គម',
        'ផ្នែករឹង',
        'អ៊ីនធឺណិត'
      ],
      correct: 0,
      explanation: 'SDLC ជួយគ្រប់គ្រងថវិកា និងកាលវិភាគនៃគម្រោង។'
    },
    {
      question: 'តើគំរូ Spiral Model ពិសេសដោយអ្វី?',
      options: [
        'ការសាកល្បងនៅគ្រប់ជំហាន',
        'ការវិភាគហានិភ័យ',
        'ការអភិវឌ្ឍជាលំដាប់',
        'ការបង្កើត UI'
      ],
      correct: 1,
      explanation: 'Spiral Model ពិសេសដោយការវិភាគហានិភ័យនៅគ្រប់វដ្ត។'
    },
    {
      question: 'តើ SDLC គាំទ្រអ្វីបន្ទាប់ពីការដាក់ឱ្យប្រើប្រាស់?',
      options: [
        'ការថែទាំប្រព័ន្ធ',
        'ការបង្កើតបណ្តាញ',
        'ការគ្រប់គ្រងផ្នែករឹង',
        'ការរចនា UI'
      ],
      correct: 0,
      explanation: 'SDLC គាំទ្រការថែទាំប្រព័ន្ធបន្ទាប់ពីការដាក់ឱ្យប្រើប្រាស់។'
    },
    {
      question: 'តើគំរូ V-Model ផ្តោតលើអ្វី?',
      options: [
        'ការសហការជាមួយអតិថិជន',
        'ការសាកល្បងនៅគ្រប់ជំហាន',
        'ការអភិវឌ្ឍជាវដ្តខ្លី',
        'ការបង្កើតគំរូ'
      ],
      correct: 1,
      explanation: 'V-Model ផ្តោតលើការសាកល្បងនៅគ្រប់ជំហាននៃការអភិវឌ្ឍ។'
    },
    {
      question: 'តើអ្វីជាគុណវិបត្តិនៃ Waterfall Model?',
      options: [
        'អាចយឺតយ៉ាវសម្រាប់គម្រោងស្មុគស្មាញ',
        'ងាយស្រួលកែលម្អ',
        'លឿនសម្រាប់គម្រោងតូច',
        'មិនត្រូវការផែនការ'
      ],
      correct: 0,
      explanation: 'Waterfall Model អាចយឺតយ៉ាវសម្រាប់គម្រោងស្មុគស្មាញ ដោយសារតែភាពជាលំដាប់។'
    },
    {
      question: 'តើ SDLC ជួយអ្វីក្នុងការអភិវឌ្ឍគម្រោង?',
      options: [
        'ការគ្រប់គ្រងហានិភ័យ',
        'ការបង្កើតបណ្តាញ',
        'ការគ្រប់គ្រងផ្នែករឹង',
        'ការរចនា UI'
      ],
      correct: 0,
      explanation: 'SDLC ជួយក្នុងការគ្រប់គ្រងហានិភ័យ ដើម្បីកាត់បន្ថយការបរាជ័យ។'
    },
    {
      question: 'តើគំរូ Iterative Model ធ្វើអ្វី?',
      options: [
        'អភិវឌ្ឍជាផ្នែកៗ និងកែលម្អបន្តបន្ទាប់',
        'ធ្វើការជាលំដាប់',
        'ផ្តោតលើការសាកល្បង',
        'បង្កើត UI'
      ],
      correct: 0,
      explanation: 'Iterative Model អភិវឌ្ឍជាផ្នែកៗ និងកែលម្អបន្តបន្ទាប់។'
    },
  ],
  lab: {
    task: `
បង្កើតផែនទីលំហូរការងារ (Flowchart) សម្រាប់ដំណើរការអភិវឌ្ឍប្រព័ន្ធ CRM ដោយប្រើ SDLC។

**តម្រូវការ:**

1. **ផែនទីលំហូរការងារ:**
   - បង្កើត Flowchart ដែលបង្ហាញជំហាននៃ SDLC សម្រាប់ការអភិវឌ្ឍប្រព័ន្ធ CRM។
   - រួមបញ្ចូលជំហានដូចជា ការវិភាគតម្រូវការ ការរចនា ការអភិវឌ្ឍ ការសាកល្បង និងការដាក់ឱ្យប្រើប្រាស់។

2. **ឧបករណ៍:**
   - ប្រើឧបករណ៍ដូចជា Microsoft Visio, Lucidchart, ឬ Draw.io ដើម្បីគូស Flowchart។

3. **លទ្ធផល:**
   - បង្ហាញ Flowchart ដែលមានសញ្ញាសម្គាល់ច្បាស់លាស់ (ឧទាហរណ៍៖ ប្រអប់សម្រាប់ជំហាន ព្រួញសម្រាប់លំហូរ)។

**ការណែនាំ:** សាកល្បងគូស Flowchart នៅលើឧបករណ៍អនឡាញ ឬក្រដាស ហើយធ្វើការពិនិត្យឡើងវិញជាមួយក្រុម។
    `,
    solution: `
**ផែនទីលំហូរការងារ (Flowchart) សម្រាប់ការអភិវឌ្ឍប្រព័ន្ធ CRM:**

1. **ការវិភាគតម្រូវការ** [ប្រអប់រាងចតុកោណ]
   - ប្រមូលតម្រូវការពីអតិថិជន
   - [ព្រួញទៅជំហានបន្ទាប់]
2. **ការរចនា** [ប្រអប់រាងចតុកោណ]
   - បង្កើតគំនូសតាងប្រព័ន្ធ (ឧទាហរណ៍៖ UML)
   - [ព្រួញទៅជំហានបន្ទាប់]
3. **ការអភិវឌ្ឍ** [ប្រអប់រាងចតុកោណ]
   - សរសេរកូដ និងអភិវឌ្ឍប្រព័ន្ធ
   - [ព្រួញទៅជំហានបន្ទាប់]
4. **ការសាកល្បង** [ប្រអប់រាងចតុកោណ]
   - ធ្វើតេស្តប្រព័ន្ធ ដើម្បីស្វែងរកកំហុស
   - [ព្រួញទៅជំហានបន្ទាប់]
5. **ការដាក់ឱ្យប្រើប្រាស់** [ប្រអប់រាងចតុកោណ]
   - ដាក់ឱ្យប្រើប្រាស់ប្រព័ន្ធ CRM
   - [ព្រួញទៅជំហានបន្ទាប់]
6. **ការថែទាំ** [ប្រអប់រាងចតុកោណ]
   - ធ្វើបច្ចុប្បន្នភាព និងកែលម្អប្រព័ន្ធ
`
  }
};

export default MISLesson4_1Content;