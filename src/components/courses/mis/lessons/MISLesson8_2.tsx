import type { LessonContent } from '../../../../types/LessonTypes';

const MISLesson8_2Content: LessonContent = {
  title: 'ការអភិវឌ្ឍម៉ូឌុល ERP សាមញ្ញ',
  objectives: [
    'យល់ដឹងពីរបៀបដែលម៉ូឌុល ERP ត្រូវបានរចនា',
    'ស្គាល់ពីលំហូរទិន្នន័យរវាងម៉ូឌុល ERP',
    'អនុវត្តការរចនាម៉ូដែលទិន្នន័យសម្រាប់ម៉ូឌុល ERP',
    'រៀនពីរបៀបសរសេរកូដសាមញ្ញដើម្បីដំណើរការមុខងារម៉ូឌុល',
    'អភិវឌ្ឍម៉ូឌុល ERP សាមញ្ញមួយដោយប្រើភាសាសរសេរកូដដែលបានជ្រើសរើស'
  ],
  content: `
# ការអភិវឌ្ឍម៉ូឌុល ERP សាមញ្ញ 🛠️💻

---

ការអភិវឌ្ឍប្រព័ន្ធ ERP ពេញលេញគឺស្មុគស្មាញណាស់ ប៉ុន្តែការយល់ដឹងពីរបៀបដែលម៉ូឌុលមួយដំណើរការអាចផ្តល់នូវការយល់ដឹងដ៏សំខាន់។ ក្នុងមេរៀននេះ យើងនឹងរៀនពីការរចនា និងការអភិវឌ្ឍម៉ូឌុល ERP សាមញ្ញមួយ។

---

## 1. គោលការណ៍នៃការរចនាម៉ូឌុល ERP

- **1. ការធ្វើសមាហរណកម្ម (Integration):** ម៉ូឌុលថ្មីត្រូវតែអាចភ្ជាប់ជាមួយម៉ូឌុលផ្សេងទៀតបាន។
- **2. មូលដ្ឋានទិន្នន័យកណ្តាល:** ទិន្នន័យដែលបង្កើតដោយម៉ូឌុលនេះត្រូវតែត្រូវបានរក្សាទុកនៅក្នុងមូលដ្ឋានទិន្នន័យកណ្តាល។
- **3. មុខងារច្បាស់លាស់:** ម៉ូឌុលនីមួយៗត្រូវតែមានមុខងារច្បាស់លាស់។ ឧទាហរណ៍៖ ម៉ូឌុលគ្រប់គ្រងស្តុក។

---

## 2. ឧទាហរណ៍: ការរចនាម៉ូឌុលគ្រប់គ្រងស្តុក

- **គោលបំណង:** គ្រប់គ្រងចំនួនស្តុកផលិតផល។
- **ទិន្នន័យដែលត្រូវការ:**
  - **តារាងផលិតផល:** ProductID, ProductName, UnitPrice
  - **តារាងស្តុក:** ProductID, Quantity, LastUpdated
  - **តារាងការលក់:** SaleID, ProductID, QuantitySold, SaleDate
- **លំហូរការងារ:**
  - នៅពេលការលក់កើតឡើង (ពីម៉ូឌុលលក់) **QuantitySold** នឹងត្រូវបានកត់ត្រាក្នុងតារាងលក់។
  - ម៉ូឌុលស្តុកនឹងត្រូវបានជូនដំណឹង ហើយនឹង **កាត់បន្ថយ** ចំនួន **Quantity** នៅក្នុងតារាងស្តុក។
- **មុខងារសំខាន់ៗ:**
  - បន្ថែម/កាត់បន្ថយចំនួនស្តុក។
  - ការជូនដំណឹងនៅពេលស្តុកជិតអស់។
  - ការបង្ហាញរបាយការណ៍ស្តុក។

---

## 3. លំហាត់ជាក់ស្តែង (Practical Lab)

**សេណារីយ៉ូ:** អ្នកនឹងអភិវឌ្ឍម៉ូឌុល ERP សាមញ្ញសម្រាប់គ្រប់គ្រងស្តុក។

**តម្រូវការ:**
- ប្រើភាសាសរសេរកូដសាមញ្ញមួយ (ឧទាហរណ៍: Python)។
- បង្កើត Database (ឧទាហរណ៍: SQLite)។
- អភិវឌ្ឍមុខងារយ៉ាងតិច ២៖
  1.  **មុខងារបន្ថែមស្តុក:** ទទួលព័ត៌មានផលិតផល (ID, ចំនួន) ហើយបន្ថែមទៅក្នុងតារាងស្តុក។
  2.  **មុខងារកាត់បន្ថយស្តុក:** ទទួលព័ត៌មានលក់ (ID, ចំនួន) ហើយកាត់បន្ថយចំនួនស្តុកក្នុងតារាងស្តុក។

`,
  examples: [
    `### ឧទាហរណ៍កូដ Python (Pseudocode)

\`\`\`python
# Connection to database
db = connect_to_database("erp.db")

# Function to add stock
def add_stock(product_id, quantity):
    # Check if product exists
    # Update quantity in 'stock' table
    # Log the action

# Function to reduce stock
def reduce_stock(product_id, quantity):
    # Check if enough stock is available
    # Update quantity in 'stock' table
    # Log the action

# Example usage
# add_stock(101, 50)
# reduce_stock(101, 10)
\`\`\`
`
  ],
  quiz: [
    {
      question: 'តើអ្វីជាគោលការណ៍ចម្បងក្នុងការរចនាម៉ូឌុល ERP?',
      options: ['ការប្រើប្រាស់មូលដ្ឋានទិន្នន័យដាច់ដោយឡែក', 'ការធ្វើសមាហរណកម្ម', 'ការមិនទំនាក់ទំនងជាមួយម៉ូឌុលផ្សេងទៀត', 'ការប្រើប្រាស់ Hardware ដាច់ដោយឡែក'],
      correct: 1,
      explanation: 'ការធ្វើសមាហរណកម្មគឺជាគោលការណ៍ស្នូលនៃប្រព័ន្ធ ERP ។'
    },
    {
      question: 'តើម៉ូឌុល ERP មួយណាដែលគ្រប់គ្រងការធ្វើបច្ចុប្បន្នភាពចំនួនផលិតផល?',
      options: ['ម៉ូឌុល CRM', 'ម៉ូឌុលការលក់', 'ម៉ូឌុលគ្រប់គ្រងស្តុក', 'ម៉ូឌុល HR'],
      correct: 2,
      explanation: 'ម៉ូឌុលគ្រប់គ្រងស្តុកទទួលខុសត្រូវលើការគ្រប់គ្រងចំនួនផលិតផល។'
    },
    {
      question: 'តើទិន្នន័យដែលបង្កើតដោយម៉ូឌុលថ្មីគួរត្រូវបានរក្សាទុកនៅទីណា?',
      options: ['នៅក្នុងឯកសារ Excel', 'នៅក្នុងមូលដ្ឋានទិន្នន័យកណ្តាល', 'នៅក្នុង Flash Drive', 'នៅក្នុងប្រព័ន្ធរបស់ម៉ូឌុលតែមួយ'],
      correct: 1,
      explanation: 'ទិន្នន័យទាំងអស់គួរតែត្រូវបានរក្សាទុកនៅក្នុងមូលដ្ឋានទិន្នន័យកណ្តាលដើម្បីចែករំលែកជាមួយម៉ូឌុលផ្សេងទៀត។'
    },
    {
      question: 'តើមុខងារ "ការជូនដំណឹងនៅពេលស្តុកជិតអស់" ជាផ្នែកមួយនៃម៉ូឌុលអ្វី?',
      options: ['ម៉ូឌុលហិរញ្ញវត្ថុ', 'ម៉ូឌុលគ្រប់គ្រងស្តុក', 'ម៉ូឌុលលក់', 'ម៉ូឌុលផលិតកម្ម'],
      correct: 1,
      explanation: 'មុខងារនេះជាផ្នែកមួយនៃម៉ូឌុលគ្រប់គ្រងស្តុក។'
    },
    {
      question: 'តើការរចនាម៉ូឌុល ERP សាមញ្ញអាចជួយអ្វីខ្លះ?',
      options: ['ជួយឱ្យយល់ពីគោលការណ៍ធ្វើសមាហរណកម្ម', 'ជួយកាត់បន្ថយការចំណាយ', 'ជួយកាត់បន្ថយចំនួនបុគ្គលិក', 'ជួយបង្កើនការលក់'],
      correct: 0,
      explanation: 'ការអភិវឌ្ឍម៉ូឌុលសាមញ្ញអាចជួយឱ្យអ្នកយល់ពីគោលការណ៍ស្នូលនៃការធ្វើសមាហរណកម្ម។'
    },
    {
      question: 'តើលំហូរទិន្នន័យមានសារៈសំខាន់យ៉ាងដូចម្តេចក្នុងការរចនាម៉ូឌុល ERP?',
      options: ['គ្មានសារៈសំខាន់', 'វាធានាថាព័ត៌មានហូរពីម៉ូឌុលមួយទៅម៉ូឌុលមួយទៀត', 'វាមិនត្រូវការមូលដ្ឋានទិន្នន័យទេ', 'វាធ្វើឱ្យកូដស្មុគស្មាញ'],
      correct: 1,
      explanation: 'លំហូរទិន្នន័យរវាងម៉ូឌុលគឺចាំបាច់ដើម្បីធានាថាប្រតិបត្តិការត្រូវបានធ្វើសមាហរណកម្ម។'
    },
    {
      question: 'តើអ្វីជាហេតុផលចម្បងដែលត្រូវពិនិត្យមើលចំនួនស្តុកមុននឹងកាត់បន្ថយ?',
      options: ['ដើម្បីការពារកុំឱ្យមានស្តុកអវិជ្ជមាន', 'ដើម្បីបង្កើនស្តុក', 'ដើម្បីធានាថាមានស្តុកគ្រប់គ្រាន់សម្រាប់លក់', 'គ្មានហេតុផល'],
      correct: 0,
      explanation: 'ការពិនិត្យមើលចំនួនស្តុកគឺដើម្បីធានាថាក្រុមហ៊ុនមិនលក់ទំនិញលើសពីចំនួនដែលមាន។'
    },
    {
      question: 'តើការធ្វើសមាហរណកម្មរវាងម៉ូឌុលគ្រប់គ្រងស្តុកនិងម៉ូឌុលលក់មានអត្ថប្រយោជន៍អ្វី?',
      options: ['កាត់បន្ថយចំណាយលើប្រព័ន្ធ', 'ផ្តល់ព័ត៌មានស្តុកទាន់ពេលដល់ផ្នែកលក់', 'បង្កើនការចំណាយ', 'កាត់បន្ថយការលក់'],
      correct: 1,
      explanation: 'ការធ្វើសមាហរណកម្មនេះធានាថាផ្នែកលក់ដឹងពីចំនួនស្តុកពិតប្រាកដមុននឹងលក់។'
    },
    {
      question: 'តើអ្វីជាឧទាហរណ៍នៃទិន្នន័យក្នុងតារាង "តារាងការលក់"?',
      options: ['ឈ្មោះបុគ្គលិក', 'Product ID និង QuantitySold', 'តម្លៃជួល', 'ឈ្មោះអ្នកផ្គត់ផ្គង់'],
      correct: 1,
      explanation: 'តារាងការលក់គួរតែមានព័ត៌មានលម្អិតអំពីការលក់នីមួយៗដូចជា Product ID និងចំនួនដែលបានលក់។'
    }
  ],
  lab: {
    task: `
**លំហាត់ជាក់ស្តែង:**

បន្តពីការអភិវឌ្ឍម៉ូឌុលគ្រប់គ្រងស្តុក។ បន្ថែមមុខងារថ្មីមួយទៀត។

**តម្រូវការ:**
- បង្កើតមុខងារថ្មីដែលឈ្មោះថា **"check_stock_level"** ។
- មុខងារនេះទទួល Product ID ជា Input ។
- វានឹងត្រឡប់តម្លៃពិត (True) ប្រសិនបើស្តុករបស់ផលិតផលនោះតិចជាង ៥ ឯកតា។ បើមិនដូច្នោះទេ ត្រឡប់តម្លៃមិនពិត (False)។
- ពិពណ៌នាពីរបៀបដែលមុខងារនេះអាចត្រូវបានប្រើប្រាស់ដោយម៉ូឌុលផ្សេងទៀត។
    `,
    solution: `
**ការអភិវឌ្ឍន៍មុខងារបន្ថែម**

\`\`\`python
# Function to check stock level
def check_stock_level(product_id):
    # Get quantity from the 'stock' table for the given product_id
    current_quantity = get_quantity_from_db(product_id)
    if current_quantity < 5:
        return True
    else:
        return False
\`\`\`

**របៀបប្រើប្រាស់មុខងារនេះ:**
- ម៉ូឌុលលក់អាចប្រើប្រាស់មុខងារនេះមុននឹងធ្វើការបញ្ជាទិញ។ ប្រសិនបើមុខងារនេះត្រឡប់តម្លៃពិត (True) ម៉ូឌុលលក់អាចជូនដំណឹងដល់អ្នកលក់ថា "ផលិតផលជិតអស់" ឬជូនដំណឹងទៅម៉ូឌុលផលិតកម្មឱ្យផលិតបន្ថែម។
- នេះគឺជាឧទាហរណ៍នៃការធ្វើសមាហរណកម្មរវាងម៉ូឌុល។
`
  }
};

export default MISLesson8_2Content;